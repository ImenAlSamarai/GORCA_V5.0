//
// File generated by rootcint at Fri Jul 28 16:44:48 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIROBASTDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "ROBASTDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void ABorderSurfaceCondition_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_ABorderSurfaceCondition(void *p);
   static void deleteArray_ABorderSurfaceCondition(void *p);
   static void destruct_ABorderSurfaceCondition(void *p);
   static void streamer_ABorderSurfaceCondition(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ABorderSurfaceCondition*)
   {
      ::ABorderSurfaceCondition *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ABorderSurfaceCondition >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ABorderSurfaceCondition", ::ABorderSurfaceCondition::Class_Version(), "./include/ABorderSurfaceCondition.h", 31,
                  typeid(::ABorderSurfaceCondition), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ABorderSurfaceCondition::Dictionary, isa_proxy, 0,
                  sizeof(::ABorderSurfaceCondition) );
      instance.SetDelete(&delete_ABorderSurfaceCondition);
      instance.SetDeleteArray(&deleteArray_ABorderSurfaceCondition);
      instance.SetDestructor(&destruct_ABorderSurfaceCondition);
      instance.SetStreamerFunc(&streamer_ABorderSurfaceCondition);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ABorderSurfaceCondition*)
   {
      return GenerateInitInstanceLocal((::ABorderSurfaceCondition*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ABorderSurfaceCondition*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ARefractiveIndex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_ARefractiveIndex(void *p);
   static void deleteArray_ARefractiveIndex(void *p);
   static void destruct_ARefractiveIndex(void *p);
   static void streamer_ARefractiveIndex(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ARefractiveIndex*)
   {
      ::ARefractiveIndex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ARefractiveIndex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ARefractiveIndex", ::ARefractiveIndex::Class_Version(), "./include/ARefractiveIndex.h", 24,
                  typeid(::ARefractiveIndex), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ARefractiveIndex::Dictionary, isa_proxy, 0,
                  sizeof(::ARefractiveIndex) );
      instance.SetDelete(&delete_ARefractiveIndex);
      instance.SetDeleteArray(&deleteArray_ARefractiveIndex);
      instance.SetDestructor(&destruct_ARefractiveIndex);
      instance.SetStreamerFunc(&streamer_ARefractiveIndex);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ARefractiveIndex*)
   {
      return GenerateInitInstanceLocal((::ARefractiveIndex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ARefractiveIndex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ACauchyFormula_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ACauchyFormula(void *p = 0);
   static void *newArray_ACauchyFormula(Long_t size, void *p);
   static void delete_ACauchyFormula(void *p);
   static void deleteArray_ACauchyFormula(void *p);
   static void destruct_ACauchyFormula(void *p);
   static void streamer_ACauchyFormula(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ACauchyFormula*)
   {
      ::ACauchyFormula *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ACauchyFormula >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ACauchyFormula", ::ACauchyFormula::Class_Version(), "./include/ACauchyFormula.h", 25,
                  typeid(::ACauchyFormula), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ACauchyFormula::Dictionary, isa_proxy, 0,
                  sizeof(::ACauchyFormula) );
      instance.SetNew(&new_ACauchyFormula);
      instance.SetNewArray(&newArray_ACauchyFormula);
      instance.SetDelete(&delete_ACauchyFormula);
      instance.SetDeleteArray(&deleteArray_ACauchyFormula);
      instance.SetDestructor(&destruct_ACauchyFormula);
      instance.SetStreamerFunc(&streamer_ACauchyFormula);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ACauchyFormula*)
   {
      return GenerateInitInstanceLocal((::ACauchyFormula*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ACauchyFormula*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AOpticalComponent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AOpticalComponent(void *p = 0);
   static void *newArray_AOpticalComponent(Long_t size, void *p);
   static void delete_AOpticalComponent(void *p);
   static void deleteArray_AOpticalComponent(void *p);
   static void destruct_AOpticalComponent(void *p);
   static void streamer_AOpticalComponent(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AOpticalComponent*)
   {
      ::AOpticalComponent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AOpticalComponent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AOpticalComponent", ::AOpticalComponent::Class_Version(), "./include/AOpticalComponent.h", 24,
                  typeid(::AOpticalComponent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AOpticalComponent::Dictionary, isa_proxy, 0,
                  sizeof(::AOpticalComponent) );
      instance.SetNew(&new_AOpticalComponent);
      instance.SetNewArray(&newArray_AOpticalComponent);
      instance.SetDelete(&delete_AOpticalComponent);
      instance.SetDeleteArray(&deleteArray_AOpticalComponent);
      instance.SetDestructor(&destruct_AOpticalComponent);
      instance.SetStreamerFunc(&streamer_AOpticalComponent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AOpticalComponent*)
   {
      return GenerateInitInstanceLocal((::AOpticalComponent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AOpticalComponent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AFocalSurface_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AFocalSurface(void *p = 0);
   static void *newArray_AFocalSurface(Long_t size, void *p);
   static void delete_AFocalSurface(void *p);
   static void deleteArray_AFocalSurface(void *p);
   static void destruct_AFocalSurface(void *p);
   static void streamer_AFocalSurface(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AFocalSurface*)
   {
      ::AFocalSurface *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AFocalSurface >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AFocalSurface", ::AFocalSurface::Class_Version(), "./include/AFocalSurface.h", 24,
                  typeid(::AFocalSurface), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AFocalSurface::Dictionary, isa_proxy, 0,
                  sizeof(::AFocalSurface) );
      instance.SetNew(&new_AFocalSurface);
      instance.SetNewArray(&newArray_AFocalSurface);
      instance.SetDelete(&delete_AFocalSurface);
      instance.SetDeleteArray(&deleteArray_AFocalSurface);
      instance.SetDestructor(&destruct_AFocalSurface);
      instance.SetStreamerFunc(&streamer_AFocalSurface);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AFocalSurface*)
   {
      return GenerateInitInstanceLocal((::AFocalSurface*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AFocalSurface*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AGeoAsphericDisk_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AGeoAsphericDisk(void *p = 0);
   static void *newArray_AGeoAsphericDisk(Long_t size, void *p);
   static void delete_AGeoAsphericDisk(void *p);
   static void deleteArray_AGeoAsphericDisk(void *p);
   static void destruct_AGeoAsphericDisk(void *p);
   static void streamer_AGeoAsphericDisk(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AGeoAsphericDisk*)
   {
      ::AGeoAsphericDisk *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AGeoAsphericDisk >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AGeoAsphericDisk", ::AGeoAsphericDisk::Class_Version(), "./include/AGeoAsphericDisk.h", 24,
                  typeid(::AGeoAsphericDisk), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AGeoAsphericDisk::Dictionary, isa_proxy, 0,
                  sizeof(::AGeoAsphericDisk) );
      instance.SetNew(&new_AGeoAsphericDisk);
      instance.SetNewArray(&newArray_AGeoAsphericDisk);
      instance.SetDelete(&delete_AGeoAsphericDisk);
      instance.SetDeleteArray(&deleteArray_AGeoAsphericDisk);
      instance.SetDestructor(&destruct_AGeoAsphericDisk);
      instance.SetStreamerFunc(&streamer_AGeoAsphericDisk);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AGeoAsphericDisk*)
   {
      return GenerateInitInstanceLocal((::AGeoAsphericDisk*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AGeoAsphericDisk*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AGeoBezierPcon_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AGeoBezierPcon(void *p = 0);
   static void *newArray_AGeoBezierPcon(Long_t size, void *p);
   static void delete_AGeoBezierPcon(void *p);
   static void deleteArray_AGeoBezierPcon(void *p);
   static void destruct_AGeoBezierPcon(void *p);
   static void streamer_AGeoBezierPcon(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AGeoBezierPcon*)
   {
      ::AGeoBezierPcon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AGeoBezierPcon >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AGeoBezierPcon", ::AGeoBezierPcon::Class_Version(), "./include/AGeoBezierPcon.h", 29,
                  typeid(::AGeoBezierPcon), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AGeoBezierPcon::Dictionary, isa_proxy, 0,
                  sizeof(::AGeoBezierPcon) );
      instance.SetNew(&new_AGeoBezierPcon);
      instance.SetNewArray(&newArray_AGeoBezierPcon);
      instance.SetDelete(&delete_AGeoBezierPcon);
      instance.SetDeleteArray(&deleteArray_AGeoBezierPcon);
      instance.SetDestructor(&destruct_AGeoBezierPcon);
      instance.SetStreamerFunc(&streamer_AGeoBezierPcon);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AGeoBezierPcon*)
   {
      return GenerateInitInstanceLocal((::AGeoBezierPcon*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AGeoBezierPcon*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AGeoBezierPgon_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AGeoBezierPgon(void *p = 0);
   static void *newArray_AGeoBezierPgon(Long_t size, void *p);
   static void delete_AGeoBezierPgon(void *p);
   static void deleteArray_AGeoBezierPgon(void *p);
   static void destruct_AGeoBezierPgon(void *p);
   static void streamer_AGeoBezierPgon(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AGeoBezierPgon*)
   {
      ::AGeoBezierPgon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AGeoBezierPgon >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AGeoBezierPgon", ::AGeoBezierPgon::Class_Version(), "./include/AGeoBezierPgon.h", 29,
                  typeid(::AGeoBezierPgon), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AGeoBezierPgon::Dictionary, isa_proxy, 0,
                  sizeof(::AGeoBezierPgon) );
      instance.SetNew(&new_AGeoBezierPgon);
      instance.SetNewArray(&newArray_AGeoBezierPgon);
      instance.SetDelete(&delete_AGeoBezierPgon);
      instance.SetDeleteArray(&deleteArray_AGeoBezierPgon);
      instance.SetDestructor(&destruct_AGeoBezierPgon);
      instance.SetStreamerFunc(&streamer_AGeoBezierPgon);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AGeoBezierPgon*)
   {
      return GenerateInitInstanceLocal((::AGeoBezierPgon*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AGeoBezierPgon*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AGeoWinstonCone2D_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AGeoWinstonCone2D(void *p = 0);
   static void *newArray_AGeoWinstonCone2D(Long_t size, void *p);
   static void delete_AGeoWinstonCone2D(void *p);
   static void deleteArray_AGeoWinstonCone2D(void *p);
   static void destruct_AGeoWinstonCone2D(void *p);
   static void streamer_AGeoWinstonCone2D(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AGeoWinstonCone2D*)
   {
      ::AGeoWinstonCone2D *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AGeoWinstonCone2D >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AGeoWinstonCone2D", ::AGeoWinstonCone2D::Class_Version(), "./include/AGeoWinstonCone2D.h", 26,
                  typeid(::AGeoWinstonCone2D), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AGeoWinstonCone2D::Dictionary, isa_proxy, 0,
                  sizeof(::AGeoWinstonCone2D) );
      instance.SetNew(&new_AGeoWinstonCone2D);
      instance.SetNewArray(&newArray_AGeoWinstonCone2D);
      instance.SetDelete(&delete_AGeoWinstonCone2D);
      instance.SetDeleteArray(&deleteArray_AGeoWinstonCone2D);
      instance.SetDestructor(&destruct_AGeoWinstonCone2D);
      instance.SetStreamerFunc(&streamer_AGeoWinstonCone2D);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AGeoWinstonCone2D*)
   {
      return GenerateInitInstanceLocal((::AGeoWinstonCone2D*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AGeoWinstonCone2D*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AGeoWinstonConePoly_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AGeoWinstonConePoly(void *p = 0);
   static void *newArray_AGeoWinstonConePoly(Long_t size, void *p);
   static void delete_AGeoWinstonConePoly(void *p);
   static void deleteArray_AGeoWinstonConePoly(void *p);
   static void destruct_AGeoWinstonConePoly(void *p);
   static void streamer_AGeoWinstonConePoly(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AGeoWinstonConePoly*)
   {
      ::AGeoWinstonConePoly *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AGeoWinstonConePoly >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AGeoWinstonConePoly", ::AGeoWinstonConePoly::Class_Version(), "./include/AGeoWinstonConePoly.h", 25,
                  typeid(::AGeoWinstonConePoly), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AGeoWinstonConePoly::Dictionary, isa_proxy, 0,
                  sizeof(::AGeoWinstonConePoly) );
      instance.SetNew(&new_AGeoWinstonConePoly);
      instance.SetNewArray(&newArray_AGeoWinstonConePoly);
      instance.SetDelete(&delete_AGeoWinstonConePoly);
      instance.SetDeleteArray(&deleteArray_AGeoWinstonConePoly);
      instance.SetDestructor(&destruct_AGeoWinstonConePoly);
      instance.SetStreamerFunc(&streamer_AGeoWinstonConePoly);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AGeoWinstonConePoly*)
   {
      return GenerateInitInstanceLocal((::AGeoWinstonConePoly*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AGeoWinstonConePoly*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ASchottFormula_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ASchottFormula(void *p = 0);
   static void *newArray_ASchottFormula(Long_t size, void *p);
   static void delete_ASchottFormula(void *p);
   static void deleteArray_ASchottFormula(void *p);
   static void destruct_ASchottFormula(void *p);
   static void streamer_ASchottFormula(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ASchottFormula*)
   {
      ::ASchottFormula *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ASchottFormula >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ASchottFormula", ::ASchottFormula::Class_Version(), "./include/ASchottFormula.h", 25,
                  typeid(::ASchottFormula), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ASchottFormula::Dictionary, isa_proxy, 0,
                  sizeof(::ASchottFormula) );
      instance.SetNew(&new_ASchottFormula);
      instance.SetNewArray(&newArray_ASchottFormula);
      instance.SetDelete(&delete_ASchottFormula);
      instance.SetDeleteArray(&deleteArray_ASchottFormula);
      instance.SetDestructor(&destruct_ASchottFormula);
      instance.SetStreamerFunc(&streamer_ASchottFormula);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ASchottFormula*)
   {
      return GenerateInitInstanceLocal((::ASchottFormula*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ASchottFormula*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ASellmeierFormula_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ASellmeierFormula(void *p = 0);
   static void *newArray_ASellmeierFormula(Long_t size, void *p);
   static void delete_ASellmeierFormula(void *p);
   static void deleteArray_ASellmeierFormula(void *p);
   static void destruct_ASellmeierFormula(void *p);
   static void streamer_ASellmeierFormula(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ASellmeierFormula*)
   {
      ::ASellmeierFormula *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ASellmeierFormula >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ASellmeierFormula", ::ASellmeierFormula::Class_Version(), "./include/ASellmeierFormula.h", 25,
                  typeid(::ASellmeierFormula), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ASellmeierFormula::Dictionary, isa_proxy, 0,
                  sizeof(::ASellmeierFormula) );
      instance.SetNew(&new_ASellmeierFormula);
      instance.SetNewArray(&newArray_ASellmeierFormula);
      instance.SetDelete(&delete_ASellmeierFormula);
      instance.SetDeleteArray(&deleteArray_ASellmeierFormula);
      instance.SetDestructor(&destruct_ASellmeierFormula);
      instance.SetStreamerFunc(&streamer_ASellmeierFormula);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ASellmeierFormula*)
   {
      return GenerateInitInstanceLocal((::ASellmeierFormula*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ASellmeierFormula*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AGlassCatalog_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AGlassCatalog(void *p = 0);
   static void *newArray_AGlassCatalog(Long_t size, void *p);
   static void delete_AGlassCatalog(void *p);
   static void deleteArray_AGlassCatalog(void *p);
   static void destruct_AGlassCatalog(void *p);
   static void streamer_AGlassCatalog(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AGlassCatalog*)
   {
      ::AGlassCatalog *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AGlassCatalog >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AGlassCatalog", ::AGlassCatalog::Class_Version(), "./include/AGlassCatalog.h", 33,
                  typeid(::AGlassCatalog), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AGlassCatalog::Dictionary, isa_proxy, 0,
                  sizeof(::AGlassCatalog) );
      instance.SetNew(&new_AGlassCatalog);
      instance.SetNewArray(&newArray_AGlassCatalog);
      instance.SetDelete(&delete_AGlassCatalog);
      instance.SetDeleteArray(&deleteArray_AGlassCatalog);
      instance.SetDestructor(&destruct_AGlassCatalog);
      instance.SetStreamerFunc(&streamer_AGlassCatalog);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AGlassCatalog*)
   {
      return GenerateInitInstanceLocal((::AGlassCatalog*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AGlassCatalog*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ALens_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ALens(void *p = 0);
   static void *newArray_ALens(Long_t size, void *p);
   static void delete_ALens(void *p);
   static void deleteArray_ALens(void *p);
   static void destruct_ALens(void *p);
   static void streamer_ALens(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ALens*)
   {
      ::ALens *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ALens >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ALens", ::ALens::Class_Version(), "./include/ALens.h", 27,
                  typeid(::ALens), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ALens::Dictionary, isa_proxy, 0,
                  sizeof(::ALens) );
      instance.SetNew(&new_ALens);
      instance.SetNewArray(&newArray_ALens);
      instance.SetDelete(&delete_ALens);
      instance.SetDeleteArray(&deleteArray_ALens);
      instance.SetDestructor(&destruct_ALens);
      instance.SetStreamerFunc(&streamer_ALens);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ALens*)
   {
      return GenerateInitInstanceLocal((::ALens*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ALens*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AMirror_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AMirror(void *p = 0);
   static void *newArray_AMirror(Long_t size, void *p);
   static void delete_AMirror(void *p);
   static void deleteArray_AMirror(void *p);
   static void destruct_AMirror(void *p);
   static void streamer_AMirror(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AMirror*)
   {
      ::AMirror *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AMirror >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AMirror", ::AMirror::Class_Version(), "./include/AMirror.h", 31,
                  typeid(::AMirror), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AMirror::Dictionary, isa_proxy, 0,
                  sizeof(::AMirror) );
      instance.SetNew(&new_AMirror);
      instance.SetNewArray(&newArray_AMirror);
      instance.SetDelete(&delete_AMirror);
      instance.SetDeleteArray(&deleteArray_AMirror);
      instance.SetDestructor(&destruct_AMirror);
      instance.SetStreamerFunc(&streamer_AMirror);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AMirror*)
   {
      return GenerateInitInstanceLocal((::AMirror*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AMirror*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AObscuration_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AObscuration(void *p = 0);
   static void *newArray_AObscuration(Long_t size, void *p);
   static void delete_AObscuration(void *p);
   static void deleteArray_AObscuration(void *p);
   static void destruct_AObscuration(void *p);
   static void streamer_AObscuration(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AObscuration*)
   {
      ::AObscuration *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AObscuration >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AObscuration", ::AObscuration::Class_Version(), "./include/AObscuration.h", 24,
                  typeid(::AObscuration), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AObscuration::Dictionary, isa_proxy, 0,
                  sizeof(::AObscuration) );
      instance.SetNew(&new_AObscuration);
      instance.SetNewArray(&newArray_AObscuration);
      instance.SetDelete(&delete_AObscuration);
      instance.SetDeleteArray(&deleteArray_AObscuration);
      instance.SetDestructor(&destruct_AObscuration);
      instance.SetStreamerFunc(&streamer_AObscuration);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AObscuration*)
   {
      return GenerateInitInstanceLocal((::AObscuration*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AObscuration*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ARay_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ARay(void *p = 0);
   static void *newArray_ARay(Long_t size, void *p);
   static void delete_ARay(void *p);
   static void deleteArray_ARay(void *p);
   static void destruct_ARay(void *p);
   static void streamer_ARay(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ARay*)
   {
      ::ARay *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ARay >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ARay", ::ARay::Class_Version(), "./include/ARay.h", 30,
                  typeid(::ARay), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ARay::Dictionary, isa_proxy, 0,
                  sizeof(::ARay) );
      instance.SetNew(&new_ARay);
      instance.SetNewArray(&newArray_ARay);
      instance.SetDelete(&delete_ARay);
      instance.SetDeleteArray(&deleteArray_ARay);
      instance.SetDestructor(&destruct_ARay);
      instance.SetStreamerFunc(&streamer_ARay);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ARay*)
   {
      return GenerateInitInstanceLocal((::ARay*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ARay*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ARayArray_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ARayArray(void *p = 0);
   static void *newArray_ARayArray(Long_t size, void *p);
   static void delete_ARayArray(void *p);
   static void deleteArray_ARayArray(void *p);
   static void destruct_ARayArray(void *p);
   static void streamer_ARayArray(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ARayArray*)
   {
      ::ARayArray *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ARayArray >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ARayArray", ::ARayArray::Class_Version(), "./include/ARayArray.h", 27,
                  typeid(::ARayArray), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ARayArray::Dictionary, isa_proxy, 0,
                  sizeof(::ARayArray) );
      instance.SetNew(&new_ARayArray);
      instance.SetNewArray(&newArray_ARayArray);
      instance.SetDelete(&delete_ARayArray);
      instance.SetDeleteArray(&deleteArray_ARayArray);
      instance.SetDestructor(&destruct_ARayArray);
      instance.SetStreamerFunc(&streamer_ARayArray);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ARayArray*)
   {
      return GenerateInitInstanceLocal((::ARayArray*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ARayArray*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AOpticsManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AOpticsManager(void *p = 0);
   static void *newArray_AOpticsManager(Long_t size, void *p);
   static void delete_AOpticsManager(void *p);
   static void deleteArray_AOpticsManager(void *p);
   static void destruct_AOpticsManager(void *p);
   static void streamer_AOpticsManager(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AOpticsManager*)
   {
      ::AOpticsManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AOpticsManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AOpticsManager", ::AOpticsManager::Class_Version(), "./include/AOpticsManager.h", 46,
                  typeid(::AOpticsManager), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AOpticsManager::Dictionary, isa_proxy, 0,
                  sizeof(::AOpticsManager) );
      instance.SetNew(&new_AOpticsManager);
      instance.SetNewArray(&newArray_AOpticsManager);
      instance.SetDelete(&delete_AOpticsManager);
      instance.SetDeleteArray(&deleteArray_AOpticsManager);
      instance.SetDestructor(&destruct_AOpticsManager);
      instance.SetStreamerFunc(&streamer_AOpticsManager);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AOpticsManager*)
   {
      return GenerateInitInstanceLocal((::AOpticsManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AOpticsManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ARayShooter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ARayShooter(void *p = 0);
   static void *newArray_ARayShooter(Long_t size, void *p);
   static void delete_ARayShooter(void *p);
   static void deleteArray_ARayShooter(void *p);
   static void destruct_ARayShooter(void *p);
   static void streamer_ARayShooter(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ARayShooter*)
   {
      ::ARayShooter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ARayShooter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ARayShooter", ::ARayShooter::Class_Version(), "./include/ARayShooter.h", 34,
                  typeid(::ARayShooter), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ARayShooter::Dictionary, isa_proxy, 0,
                  sizeof(::ARayShooter) );
      instance.SetNew(&new_ARayShooter);
      instance.SetNewArray(&newArray_ARayShooter);
      instance.SetDelete(&delete_ARayShooter);
      instance.SetDeleteArray(&deleteArray_ARayShooter);
      instance.SetDestructor(&destruct_ARayShooter);
      instance.SetStreamerFunc(&streamer_ARayShooter);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ARayShooter*)
   {
      return GenerateInitInstanceLocal((::ARayShooter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ARayShooter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr ABorderSurfaceCondition::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ABorderSurfaceCondition::Class_Name()
{
   return "ABorderSurfaceCondition";
}

//______________________________________________________________________________
const char *ABorderSurfaceCondition::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ABorderSurfaceCondition*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ABorderSurfaceCondition::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ABorderSurfaceCondition*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ABorderSurfaceCondition::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ABorderSurfaceCondition*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ABorderSurfaceCondition::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ABorderSurfaceCondition*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ARefractiveIndex::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ARefractiveIndex::Class_Name()
{
   return "ARefractiveIndex";
}

//______________________________________________________________________________
const char *ARefractiveIndex::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ARefractiveIndex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ARefractiveIndex::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ARefractiveIndex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ARefractiveIndex::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ARefractiveIndex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ARefractiveIndex::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ARefractiveIndex*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ACauchyFormula::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ACauchyFormula::Class_Name()
{
   return "ACauchyFormula";
}

//______________________________________________________________________________
const char *ACauchyFormula::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ACauchyFormula*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ACauchyFormula::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ACauchyFormula*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ACauchyFormula::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ACauchyFormula*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ACauchyFormula::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ACauchyFormula*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AOpticalComponent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AOpticalComponent::Class_Name()
{
   return "AOpticalComponent";
}

//______________________________________________________________________________
const char *AOpticalComponent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AOpticalComponent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AOpticalComponent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AOpticalComponent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AOpticalComponent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AOpticalComponent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AOpticalComponent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AOpticalComponent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AFocalSurface::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AFocalSurface::Class_Name()
{
   return "AFocalSurface";
}

//______________________________________________________________________________
const char *AFocalSurface::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AFocalSurface*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AFocalSurface::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AFocalSurface*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AFocalSurface::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AFocalSurface*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AFocalSurface::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AFocalSurface*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AGeoAsphericDisk::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AGeoAsphericDisk::Class_Name()
{
   return "AGeoAsphericDisk";
}

//______________________________________________________________________________
const char *AGeoAsphericDisk::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AGeoAsphericDisk*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AGeoAsphericDisk::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AGeoAsphericDisk*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AGeoAsphericDisk::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AGeoAsphericDisk*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AGeoAsphericDisk::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AGeoAsphericDisk*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AGeoBezierPcon::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AGeoBezierPcon::Class_Name()
{
   return "AGeoBezierPcon";
}

//______________________________________________________________________________
const char *AGeoBezierPcon::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AGeoBezierPcon*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AGeoBezierPcon::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AGeoBezierPcon*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AGeoBezierPcon::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AGeoBezierPcon*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AGeoBezierPcon::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AGeoBezierPcon*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AGeoBezierPgon::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AGeoBezierPgon::Class_Name()
{
   return "AGeoBezierPgon";
}

//______________________________________________________________________________
const char *AGeoBezierPgon::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AGeoBezierPgon*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AGeoBezierPgon::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AGeoBezierPgon*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AGeoBezierPgon::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AGeoBezierPgon*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AGeoBezierPgon::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AGeoBezierPgon*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AGeoWinstonCone2D::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AGeoWinstonCone2D::Class_Name()
{
   return "AGeoWinstonCone2D";
}

//______________________________________________________________________________
const char *AGeoWinstonCone2D::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AGeoWinstonCone2D*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AGeoWinstonCone2D::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AGeoWinstonCone2D*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AGeoWinstonCone2D::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AGeoWinstonCone2D*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AGeoWinstonCone2D::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AGeoWinstonCone2D*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AGeoWinstonConePoly::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AGeoWinstonConePoly::Class_Name()
{
   return "AGeoWinstonConePoly";
}

//______________________________________________________________________________
const char *AGeoWinstonConePoly::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AGeoWinstonConePoly*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AGeoWinstonConePoly::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AGeoWinstonConePoly*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AGeoWinstonConePoly::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AGeoWinstonConePoly*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AGeoWinstonConePoly::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AGeoWinstonConePoly*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ASchottFormula::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ASchottFormula::Class_Name()
{
   return "ASchottFormula";
}

//______________________________________________________________________________
const char *ASchottFormula::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ASchottFormula*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ASchottFormula::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ASchottFormula*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ASchottFormula::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ASchottFormula*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ASchottFormula::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ASchottFormula*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ASellmeierFormula::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ASellmeierFormula::Class_Name()
{
   return "ASellmeierFormula";
}

//______________________________________________________________________________
const char *ASellmeierFormula::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ASellmeierFormula*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ASellmeierFormula::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ASellmeierFormula*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ASellmeierFormula::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ASellmeierFormula*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ASellmeierFormula::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ASellmeierFormula*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AGlassCatalog::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AGlassCatalog::Class_Name()
{
   return "AGlassCatalog";
}

//______________________________________________________________________________
const char *AGlassCatalog::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AGlassCatalog*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AGlassCatalog::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AGlassCatalog*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AGlassCatalog::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AGlassCatalog*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AGlassCatalog::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AGlassCatalog*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ALens::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ALens::Class_Name()
{
   return "ALens";
}

//______________________________________________________________________________
const char *ALens::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ALens*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ALens::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ALens*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ALens::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ALens*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ALens::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ALens*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AMirror::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AMirror::Class_Name()
{
   return "AMirror";
}

//______________________________________________________________________________
const char *AMirror::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AMirror*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AMirror::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AMirror*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AMirror::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AMirror*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AMirror::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AMirror*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AObscuration::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AObscuration::Class_Name()
{
   return "AObscuration";
}

//______________________________________________________________________________
const char *AObscuration::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AObscuration*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AObscuration::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AObscuration*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AObscuration::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AObscuration*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AObscuration::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AObscuration*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ARay::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ARay::Class_Name()
{
   return "ARay";
}

//______________________________________________________________________________
const char *ARay::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ARay*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ARay::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ARay*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ARay::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ARay*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ARay::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ARay*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ARayArray::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ARayArray::Class_Name()
{
   return "ARayArray";
}

//______________________________________________________________________________
const char *ARayArray::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ARayArray*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ARayArray::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ARayArray*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ARayArray::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ARayArray*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ARayArray::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ARayArray*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AOpticsManager::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AOpticsManager::Class_Name()
{
   return "AOpticsManager";
}

//______________________________________________________________________________
const char *AOpticsManager::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AOpticsManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AOpticsManager::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AOpticsManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AOpticsManager::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AOpticsManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AOpticsManager::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AOpticsManager*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ARayShooter::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ARayShooter::Class_Name()
{
   return "ARayShooter";
}

//______________________________________________________________________________
const char *ARayShooter::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ARayShooter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ARayShooter::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ARayShooter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ARayShooter::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ARayShooter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ARayShooter::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ARayShooter*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void ABorderSurfaceCondition::Streamer(TBuffer &R__b)
{
   // Stream an object of class ABorderSurfaceCondition.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> fVolume[R__i];
      R__b >> fSigma;
      R__b.CheckByteCount(R__s, R__c, ABorderSurfaceCondition::IsA());
   } else {
      R__c = R__b.WriteVersion(ABorderSurfaceCondition::IsA(), kTRUE);
      TObject::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 2; R__i++)
         R__b << fVolume[R__i];
      R__b << fSigma;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ABorderSurfaceCondition::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ABorderSurfaceCondition.
      TClass *R__cl = ::ABorderSurfaceCondition::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVolume[2]", &fVolume);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigma", &fSigma);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_ABorderSurfaceCondition(void *p) {
      delete ((::ABorderSurfaceCondition*)p);
   }
   static void deleteArray_ABorderSurfaceCondition(void *p) {
      delete [] ((::ABorderSurfaceCondition*)p);
   }
   static void destruct_ABorderSurfaceCondition(void *p) {
      typedef ::ABorderSurfaceCondition current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ABorderSurfaceCondition(TBuffer &buf, void *obj) {
      ((::ABorderSurfaceCondition*)obj)->::ABorderSurfaceCondition::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::ABorderSurfaceCondition

//______________________________________________________________________________
void ACauchyFormula::Streamer(TBuffer &R__b)
{
   // Stream an object of class ACauchyFormula.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      ARefractiveIndex::Streamer(R__b);
      R__b.ReadStaticArray((double*)fPar);
      R__b.CheckByteCount(R__s, R__c, ACauchyFormula::IsA());
   } else {
      R__c = R__b.WriteVersion(ACauchyFormula::IsA(), kTRUE);
      ARefractiveIndex::Streamer(R__b);
      R__b.WriteArray(fPar, 3);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ACauchyFormula::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ACauchyFormula.
      TClass *R__cl = ::ACauchyFormula::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPar[3]", fPar);
      ARefractiveIndex::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ACauchyFormula(void *p) {
      return  p ? new(p) ::ACauchyFormula : new ::ACauchyFormula;
   }
   static void *newArray_ACauchyFormula(Long_t nElements, void *p) {
      return p ? new(p) ::ACauchyFormula[nElements] : new ::ACauchyFormula[nElements];
   }
   // Wrapper around operator delete
   static void delete_ACauchyFormula(void *p) {
      delete ((::ACauchyFormula*)p);
   }
   static void deleteArray_ACauchyFormula(void *p) {
      delete [] ((::ACauchyFormula*)p);
   }
   static void destruct_ACauchyFormula(void *p) {
      typedef ::ACauchyFormula current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ACauchyFormula(TBuffer &buf, void *obj) {
      ((::ACauchyFormula*)obj)->::ACauchyFormula::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::ACauchyFormula

//______________________________________________________________________________
void AFocalSurface::Streamer(TBuffer &R__b)
{
   // Stream an object of class AFocalSurface.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      AOpticalComponent::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, AFocalSurface::IsA());
   } else {
      R__c = R__b.WriteVersion(AFocalSurface::IsA(), kTRUE);
      AOpticalComponent::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void AFocalSurface::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AFocalSurface.
      TClass *R__cl = ::AFocalSurface::IsA();
      if (R__cl || R__insp.IsA()) { }
      AOpticalComponent::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AFocalSurface(void *p) {
      return  p ? new(p) ::AFocalSurface : new ::AFocalSurface;
   }
   static void *newArray_AFocalSurface(Long_t nElements, void *p) {
      return p ? new(p) ::AFocalSurface[nElements] : new ::AFocalSurface[nElements];
   }
   // Wrapper around operator delete
   static void delete_AFocalSurface(void *p) {
      delete ((::AFocalSurface*)p);
   }
   static void deleteArray_AFocalSurface(void *p) {
      delete [] ((::AFocalSurface*)p);
   }
   static void destruct_AFocalSurface(void *p) {
      typedef ::AFocalSurface current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_AFocalSurface(TBuffer &buf, void *obj) {
      ((::AFocalSurface*)obj)->::AFocalSurface::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::AFocalSurface

//______________________________________________________________________________
void AGeoAsphericDisk::Streamer(TBuffer &R__b)
{
   // Stream an object of class AGeoAsphericDisk.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TGeoBBox::Streamer(R__b);
      R__b >> fZ1;
      R__b >> fZ2;
      R__b >> fCurve1;
      R__b >> fCurve2;
      R__b >> fRmin;
      R__b >> fRmax;
      R__b >> fNPol1;
      R__b >> fNPol2;
      delete [] fK1;
      fK1 = new Double_t[fNPol1];
      R__b.ReadFastArray(fK1,fNPol1);
      delete [] fK2;
      fK2 = new Double_t[fNPol2];
      R__b.ReadFastArray(fK2,fNPol2);
      R__b >> fSteps;
      R__b >> fRepeat;
      R__b.CheckByteCount(R__s, R__c, AGeoAsphericDisk::IsA());
   } else {
      R__c = R__b.WriteVersion(AGeoAsphericDisk::IsA(), kTRUE);
      TGeoBBox::Streamer(R__b);
      R__b << fZ1;
      R__b << fZ2;
      R__b << fCurve1;
      R__b << fCurve2;
      R__b << fRmin;
      R__b << fRmax;
      R__b << fNPol1;
      R__b << fNPol2;
      R__b.WriteFastArray(fK1,fNPol1);
      R__b.WriteFastArray(fK2,fNPol2);
      R__b << fSteps;
      R__b << fRepeat;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void AGeoAsphericDisk::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AGeoAsphericDisk.
      TClass *R__cl = ::AGeoAsphericDisk::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ1", &fZ1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ2", &fZ2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurve1", &fCurve1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurve2", &fCurve2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRmin", &fRmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRmax", &fRmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPol1", &fNPol1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPol2", &fNPol2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fK1", &fK1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fK2", &fK2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSteps", &fSteps);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRepeat", &fRepeat);
      TGeoBBox::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AGeoAsphericDisk(void *p) {
      return  p ? new(p) ::AGeoAsphericDisk : new ::AGeoAsphericDisk;
   }
   static void *newArray_AGeoAsphericDisk(Long_t nElements, void *p) {
      return p ? new(p) ::AGeoAsphericDisk[nElements] : new ::AGeoAsphericDisk[nElements];
   }
   // Wrapper around operator delete
   static void delete_AGeoAsphericDisk(void *p) {
      delete ((::AGeoAsphericDisk*)p);
   }
   static void deleteArray_AGeoAsphericDisk(void *p) {
      delete [] ((::AGeoAsphericDisk*)p);
   }
   static void destruct_AGeoAsphericDisk(void *p) {
      typedef ::AGeoAsphericDisk current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_AGeoAsphericDisk(TBuffer &buf, void *obj) {
      ((::AGeoAsphericDisk*)obj)->::AGeoAsphericDisk::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::AGeoAsphericDisk

//______________________________________________________________________________
void AGeoBezierPcon::Streamer(TBuffer &R__b)
{
   // Stream an object of class AGeoBezierPcon.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TGeoPcon::Streamer(R__b);
      R__b >> fLength;
      R__b >> fR1;
      R__b >> fR2;
      fP1.Streamer(R__b);
      fP2.Streamer(R__b);
      R__b >> fNcontrol;
      R__b.CheckByteCount(R__s, R__c, AGeoBezierPcon::IsA());
   } else {
      R__c = R__b.WriteVersion(AGeoBezierPcon::IsA(), kTRUE);
      TGeoPcon::Streamer(R__b);
      R__b << fLength;
      R__b << fR1;
      R__b << fR2;
      fP1.Streamer(R__b);
      fP2.Streamer(R__b);
      R__b << fNcontrol;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void AGeoBezierPcon::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AGeoBezierPcon.
      TClass *R__cl = ::AGeoBezierPcon::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLength", &fLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR1", &fR1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR2", &fR2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP1", &fP1);
      R__insp.InspectMember(fP1, "fP1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP2", &fP2);
      R__insp.InspectMember(fP2, "fP2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNcontrol", &fNcontrol);
      TGeoPcon::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AGeoBezierPcon(void *p) {
      return  p ? new(p) ::AGeoBezierPcon : new ::AGeoBezierPcon;
   }
   static void *newArray_AGeoBezierPcon(Long_t nElements, void *p) {
      return p ? new(p) ::AGeoBezierPcon[nElements] : new ::AGeoBezierPcon[nElements];
   }
   // Wrapper around operator delete
   static void delete_AGeoBezierPcon(void *p) {
      delete ((::AGeoBezierPcon*)p);
   }
   static void deleteArray_AGeoBezierPcon(void *p) {
      delete [] ((::AGeoBezierPcon*)p);
   }
   static void destruct_AGeoBezierPcon(void *p) {
      typedef ::AGeoBezierPcon current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_AGeoBezierPcon(TBuffer &buf, void *obj) {
      ((::AGeoBezierPcon*)obj)->::AGeoBezierPcon::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::AGeoBezierPcon

//______________________________________________________________________________
void AGeoBezierPgon::Streamer(TBuffer &R__b)
{
   // Stream an object of class AGeoBezierPgon.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TGeoPgon::Streamer(R__b);
      R__b >> fLength;
      R__b >> fR1;
      R__b >> fR2;
      fP1.Streamer(R__b);
      fP2.Streamer(R__b);
      R__b >> fNcontrol;
      R__b.CheckByteCount(R__s, R__c, AGeoBezierPgon::IsA());
   } else {
      R__c = R__b.WriteVersion(AGeoBezierPgon::IsA(), kTRUE);
      TGeoPgon::Streamer(R__b);
      R__b << fLength;
      R__b << fR1;
      R__b << fR2;
      fP1.Streamer(R__b);
      fP2.Streamer(R__b);
      R__b << fNcontrol;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void AGeoBezierPgon::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AGeoBezierPgon.
      TClass *R__cl = ::AGeoBezierPgon::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLength", &fLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR1", &fR1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR2", &fR2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP1", &fP1);
      R__insp.InspectMember(fP1, "fP1.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP2", &fP2);
      R__insp.InspectMember(fP2, "fP2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNcontrol", &fNcontrol);
      TGeoPgon::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AGeoBezierPgon(void *p) {
      return  p ? new(p) ::AGeoBezierPgon : new ::AGeoBezierPgon;
   }
   static void *newArray_AGeoBezierPgon(Long_t nElements, void *p) {
      return p ? new(p) ::AGeoBezierPgon[nElements] : new ::AGeoBezierPgon[nElements];
   }
   // Wrapper around operator delete
   static void delete_AGeoBezierPgon(void *p) {
      delete ((::AGeoBezierPgon*)p);
   }
   static void deleteArray_AGeoBezierPgon(void *p) {
      delete [] ((::AGeoBezierPgon*)p);
   }
   static void destruct_AGeoBezierPgon(void *p) {
      typedef ::AGeoBezierPgon current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_AGeoBezierPgon(TBuffer &buf, void *obj) {
      ((::AGeoBezierPgon*)obj)->::AGeoBezierPgon::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::AGeoBezierPgon

//______________________________________________________________________________
void AGeoWinstonCone2D::Streamer(TBuffer &R__b)
{
   // Stream an object of class AGeoWinstonCone2D.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TGeoBBox::Streamer(R__b);
      R__b >> fR1;
      R__b >> fR2;
      R__b >> fTheta;
      R__b >> fF;
      R__b.CheckByteCount(R__s, R__c, AGeoWinstonCone2D::IsA());
   } else {
      R__c = R__b.WriteVersion(AGeoWinstonCone2D::IsA(), kTRUE);
      TGeoBBox::Streamer(R__b);
      R__b << fR1;
      R__b << fR2;
      R__b << fTheta;
      R__b << fF;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void AGeoWinstonCone2D::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AGeoWinstonCone2D.
      TClass *R__cl = ::AGeoWinstonCone2D::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR1", &fR1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR2", &fR2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTheta", &fTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fF", &fF);
      TGeoBBox::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AGeoWinstonCone2D(void *p) {
      return  p ? new(p) ::AGeoWinstonCone2D : new ::AGeoWinstonCone2D;
   }
   static void *newArray_AGeoWinstonCone2D(Long_t nElements, void *p) {
      return p ? new(p) ::AGeoWinstonCone2D[nElements] : new ::AGeoWinstonCone2D[nElements];
   }
   // Wrapper around operator delete
   static void delete_AGeoWinstonCone2D(void *p) {
      delete ((::AGeoWinstonCone2D*)p);
   }
   static void deleteArray_AGeoWinstonCone2D(void *p) {
      delete [] ((::AGeoWinstonCone2D*)p);
   }
   static void destruct_AGeoWinstonCone2D(void *p) {
      typedef ::AGeoWinstonCone2D current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_AGeoWinstonCone2D(TBuffer &buf, void *obj) {
      ((::AGeoWinstonCone2D*)obj)->::AGeoWinstonCone2D::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::AGeoWinstonCone2D

//______________________________________________________________________________
void AGeoWinstonConePoly::Streamer(TBuffer &R__b)
{
   // Stream an object of class AGeoWinstonConePoly.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      AGeoWinstonCone2D::Streamer(R__b);
      R__b >> fPolyN;
      R__b.CheckByteCount(R__s, R__c, AGeoWinstonConePoly::IsA());
   } else {
      R__c = R__b.WriteVersion(AGeoWinstonConePoly::IsA(), kTRUE);
      AGeoWinstonCone2D::Streamer(R__b);
      R__b << fPolyN;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void AGeoWinstonConePoly::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AGeoWinstonConePoly.
      TClass *R__cl = ::AGeoWinstonConePoly::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPolyN", &fPolyN);
      AGeoWinstonCone2D::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AGeoWinstonConePoly(void *p) {
      return  p ? new(p) ::AGeoWinstonConePoly : new ::AGeoWinstonConePoly;
   }
   static void *newArray_AGeoWinstonConePoly(Long_t nElements, void *p) {
      return p ? new(p) ::AGeoWinstonConePoly[nElements] : new ::AGeoWinstonConePoly[nElements];
   }
   // Wrapper around operator delete
   static void delete_AGeoWinstonConePoly(void *p) {
      delete ((::AGeoWinstonConePoly*)p);
   }
   static void deleteArray_AGeoWinstonConePoly(void *p) {
      delete [] ((::AGeoWinstonConePoly*)p);
   }
   static void destruct_AGeoWinstonConePoly(void *p) {
      typedef ::AGeoWinstonConePoly current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_AGeoWinstonConePoly(TBuffer &buf, void *obj) {
      ((::AGeoWinstonConePoly*)obj)->::AGeoWinstonConePoly::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::AGeoWinstonConePoly

//______________________________________________________________________________
void AGlassCatalog::Streamer(TBuffer &R__b)
{
   // Stream an object of class AGlassCatalog.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void AGlassCatalog::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AGlassCatalog.
      TClass *R__cl = ::AGlassCatalog::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AGlassCatalog(void *p) {
      return  p ? new(p) ::AGlassCatalog : new ::AGlassCatalog;
   }
   static void *newArray_AGlassCatalog(Long_t nElements, void *p) {
      return p ? new(p) ::AGlassCatalog[nElements] : new ::AGlassCatalog[nElements];
   }
   // Wrapper around operator delete
   static void delete_AGlassCatalog(void *p) {
      delete ((::AGlassCatalog*)p);
   }
   static void deleteArray_AGlassCatalog(void *p) {
      delete [] ((::AGlassCatalog*)p);
   }
   static void destruct_AGlassCatalog(void *p) {
      typedef ::AGlassCatalog current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_AGlassCatalog(TBuffer &buf, void *obj) {
      ((::AGlassCatalog*)obj)->::AGlassCatalog::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::AGlassCatalog

//______________________________________________________________________________
void ALens::Streamer(TBuffer &R__b)
{
   // Stream an object of class ALens.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      AOpticalComponent::Streamer(R__b);
      R__b >> fIndex;
      R__b >> fConstantIndex;
      R__b >> fConstantAbsorptionLength;
      R__b.CheckByteCount(R__s, R__c, ALens::IsA());
   } else {
      R__c = R__b.WriteVersion(ALens::IsA(), kTRUE);
      AOpticalComponent::Streamer(R__b);
      R__b << fIndex;
      R__b << fConstantIndex;
      R__b << fConstantAbsorptionLength;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ALens::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ALens.
      TClass *R__cl = ::ALens::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIndex", &fIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConstantIndex", &fConstantIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fConstantAbsorptionLength", &fConstantAbsorptionLength);
      AOpticalComponent::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ALens(void *p) {
      return  p ? new(p) ::ALens : new ::ALens;
   }
   static void *newArray_ALens(Long_t nElements, void *p) {
      return p ? new(p) ::ALens[nElements] : new ::ALens[nElements];
   }
   // Wrapper around operator delete
   static void delete_ALens(void *p) {
      delete ((::ALens*)p);
   }
   static void deleteArray_ALens(void *p) {
      delete [] ((::ALens*)p);
   }
   static void destruct_ALens(void *p) {
      typedef ::ALens current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ALens(TBuffer &buf, void *obj) {
      ((::ALens*)obj)->::ALens::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::ALens

//______________________________________________________________________________
void AMirror::Streamer(TBuffer &R__b)
{
   // Stream an object of class AMirror.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      AOpticalComponent::Streamer(R__b);
      R__b >> fReflectivity1D;
      R__b >> fReflectivity2D;
      R__b.CheckByteCount(R__s, R__c, AMirror::IsA());
   } else {
      R__c = R__b.WriteVersion(AMirror::IsA(), kTRUE);
      AOpticalComponent::Streamer(R__b);
      R__b << fReflectivity1D;
      R__b << fReflectivity2D;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void AMirror::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AMirror.
      TClass *R__cl = ::AMirror::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fReflectivity1D", &fReflectivity1D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fReflectivity2D", &fReflectivity2D);
      AOpticalComponent::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AMirror(void *p) {
      return  p ? new(p) ::AMirror : new ::AMirror;
   }
   static void *newArray_AMirror(Long_t nElements, void *p) {
      return p ? new(p) ::AMirror[nElements] : new ::AMirror[nElements];
   }
   // Wrapper around operator delete
   static void delete_AMirror(void *p) {
      delete ((::AMirror*)p);
   }
   static void deleteArray_AMirror(void *p) {
      delete [] ((::AMirror*)p);
   }
   static void destruct_AMirror(void *p) {
      typedef ::AMirror current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_AMirror(TBuffer &buf, void *obj) {
      ((::AMirror*)obj)->::AMirror::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::AMirror

//______________________________________________________________________________
void AObscuration::Streamer(TBuffer &R__b)
{
   // Stream an object of class AObscuration.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      AOpticalComponent::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, AObscuration::IsA());
   } else {
      R__c = R__b.WriteVersion(AObscuration::IsA(), kTRUE);
      AOpticalComponent::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void AObscuration::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AObscuration.
      TClass *R__cl = ::AObscuration::IsA();
      if (R__cl || R__insp.IsA()) { }
      AOpticalComponent::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AObscuration(void *p) {
      return  p ? new(p) ::AObscuration : new ::AObscuration;
   }
   static void *newArray_AObscuration(Long_t nElements, void *p) {
      return p ? new(p) ::AObscuration[nElements] : new ::AObscuration[nElements];
   }
   // Wrapper around operator delete
   static void delete_AObscuration(void *p) {
      delete ((::AObscuration*)p);
   }
   static void deleteArray_AObscuration(void *p) {
      delete [] ((::AObscuration*)p);
   }
   static void destruct_AObscuration(void *p) {
      typedef ::AObscuration current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_AObscuration(TBuffer &buf, void *obj) {
      ((::AObscuration*)obj)->::AObscuration::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::AObscuration

//______________________________________________________________________________
void AOpticalComponent::Streamer(TBuffer &R__b)
{
   // Stream an object of class AOpticalComponent.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TGeoVolume::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, AOpticalComponent::IsA());
   } else {
      R__c = R__b.WriteVersion(AOpticalComponent::IsA(), kTRUE);
      TGeoVolume::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void AOpticalComponent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AOpticalComponent.
      TClass *R__cl = ::AOpticalComponent::IsA();
      if (R__cl || R__insp.IsA()) { }
      TGeoVolume::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AOpticalComponent(void *p) {
      return  p ? new(p) ::AOpticalComponent : new ::AOpticalComponent;
   }
   static void *newArray_AOpticalComponent(Long_t nElements, void *p) {
      return p ? new(p) ::AOpticalComponent[nElements] : new ::AOpticalComponent[nElements];
   }
   // Wrapper around operator delete
   static void delete_AOpticalComponent(void *p) {
      delete ((::AOpticalComponent*)p);
   }
   static void deleteArray_AOpticalComponent(void *p) {
      delete [] ((::AOpticalComponent*)p);
   }
   static void destruct_AOpticalComponent(void *p) {
      typedef ::AOpticalComponent current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_AOpticalComponent(TBuffer &buf, void *obj) {
      ((::AOpticalComponent*)obj)->::AOpticalComponent::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::AOpticalComponent

//______________________________________________________________________________
void AOpticsManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class AOpticsManager.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TGeoManager::Streamer(R__b);
      R__b >> fLimit;
      R__b >> fNThreads;
      R__b >> fDisableFresnelReflection;
      R__b.CheckByteCount(R__s, R__c, AOpticsManager::IsA());
   } else {
      R__c = R__b.WriteVersion(AOpticsManager::IsA(), kTRUE);
      TGeoManager::Streamer(R__b);
      R__b << fLimit;
      R__b << fNThreads;
      R__b << fDisableFresnelReflection;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void AOpticsManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AOpticsManager.
      TClass *R__cl = ::AOpticsManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLimit", &fLimit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNThreads", &fNThreads);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDisableFresnelReflection", &fDisableFresnelReflection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStep", &fStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fD1[3]", fD1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fD2[3]", fD2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX1[4]", fX1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX2[4]", fX2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEndNode", &fEndNode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fStartNode", &fStartNode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTypeEnd", &fTypeEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTypeStart", &fTypeStart);
      TGeoManager::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AOpticsManager(void *p) {
      return  p ? new(p) ::AOpticsManager : new ::AOpticsManager;
   }
   static void *newArray_AOpticsManager(Long_t nElements, void *p) {
      return p ? new(p) ::AOpticsManager[nElements] : new ::AOpticsManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_AOpticsManager(void *p) {
      delete ((::AOpticsManager*)p);
   }
   static void deleteArray_AOpticsManager(void *p) {
      delete [] ((::AOpticsManager*)p);
   }
   static void destruct_AOpticsManager(void *p) {
      typedef ::AOpticsManager current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_AOpticsManager(TBuffer &buf, void *obj) {
      ((::AOpticsManager*)obj)->::AOpticsManager::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::AOpticsManager

//______________________________________________________________________________
void ARay::Streamer(TBuffer &R__b)
{
   // Stream an object of class ARay.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TGeoTrack::Streamer(R__b);
      R__b >> fLambda;
      fDirection.Streamer(R__b);
      R__b >> fStatus;
      R__b.CheckByteCount(R__s, R__c, ARay::IsA());
   } else {
      R__c = R__b.WriteVersion(ARay::IsA(), kTRUE);
      TGeoTrack::Streamer(R__b);
      R__b << fLambda;
      fDirection.Streamer(R__b);
      R__b << fStatus;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ARay::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ARay.
      TClass *R__cl = ::ARay::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLambda", &fLambda);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirection", &fDirection);
      R__insp.InspectMember(fDirection, "fDirection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStatus", &fStatus);
      TGeoTrack::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ARay(void *p) {
      return  p ? new(p) ::ARay : new ::ARay;
   }
   static void *newArray_ARay(Long_t nElements, void *p) {
      return p ? new(p) ::ARay[nElements] : new ::ARay[nElements];
   }
   // Wrapper around operator delete
   static void delete_ARay(void *p) {
      delete ((::ARay*)p);
   }
   static void deleteArray_ARay(void *p) {
      delete [] ((::ARay*)p);
   }
   static void destruct_ARay(void *p) {
      typedef ::ARay current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ARay(TBuffer &buf, void *obj) {
      ((::ARay*)obj)->::ARay::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::ARay

//______________________________________________________________________________
void ARayArray::Streamer(TBuffer &R__b)
{
   // Stream an object of class ARayArray.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      fAbsorbed.Streamer(R__b);
      fExited.Streamer(R__b);
      fFocused.Streamer(R__b);
      fRunning.Streamer(R__b);
      fStopped.Streamer(R__b);
      fSuspended.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, ARayArray::IsA());
   } else {
      R__c = R__b.WriteVersion(ARayArray::IsA(), kTRUE);
      TObject::Streamer(R__b);
      fAbsorbed.Streamer(R__b);
      fExited.Streamer(R__b);
      fFocused.Streamer(R__b);
      fRunning.Streamer(R__b);
      fStopped.Streamer(R__b);
      fSuspended.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ARayArray::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ARayArray.
      TClass *R__cl = ::ARayArray::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAbsorbed", &fAbsorbed);
      R__insp.InspectMember(fAbsorbed, "fAbsorbed.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExited", &fExited);
      R__insp.InspectMember(fExited, "fExited.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFocused", &fFocused);
      R__insp.InspectMember(fFocused, "fFocused.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunning", &fRunning);
      R__insp.InspectMember(fRunning, "fRunning.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStopped", &fStopped);
      R__insp.InspectMember(fStopped, "fStopped.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSuspended", &fSuspended);
      R__insp.InspectMember(fSuspended, "fSuspended.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ARayArray(void *p) {
      return  p ? new(p) ::ARayArray : new ::ARayArray;
   }
   static void *newArray_ARayArray(Long_t nElements, void *p) {
      return p ? new(p) ::ARayArray[nElements] : new ::ARayArray[nElements];
   }
   // Wrapper around operator delete
   static void delete_ARayArray(void *p) {
      delete ((::ARayArray*)p);
   }
   static void deleteArray_ARayArray(void *p) {
      delete [] ((::ARayArray*)p);
   }
   static void destruct_ARayArray(void *p) {
      typedef ::ARayArray current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ARayArray(TBuffer &buf, void *obj) {
      ((::ARayArray*)obj)->::ARayArray::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::ARayArray

//______________________________________________________________________________
void ARayShooter::Streamer(TBuffer &R__b)
{
   // Stream an object of class ARayShooter.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, ARayShooter::IsA());
   } else {
      R__c = R__b.WriteVersion(ARayShooter::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ARayShooter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ARayShooter.
      TClass *R__cl = ::ARayShooter::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ARayShooter(void *p) {
      return  p ? new(p) ::ARayShooter : new ::ARayShooter;
   }
   static void *newArray_ARayShooter(Long_t nElements, void *p) {
      return p ? new(p) ::ARayShooter[nElements] : new ::ARayShooter[nElements];
   }
   // Wrapper around operator delete
   static void delete_ARayShooter(void *p) {
      delete ((::ARayShooter*)p);
   }
   static void deleteArray_ARayShooter(void *p) {
      delete [] ((::ARayShooter*)p);
   }
   static void destruct_ARayShooter(void *p) {
      typedef ::ARayShooter current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ARayShooter(TBuffer &buf, void *obj) {
      ((::ARayShooter*)obj)->::ARayShooter::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::ARayShooter

//______________________________________________________________________________
void ARefractiveIndex::Streamer(TBuffer &R__b)
{
   // Stream an object of class ARefractiveIndex.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, ARefractiveIndex::IsA());
   } else {
      R__c = R__b.WriteVersion(ARefractiveIndex::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ARefractiveIndex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ARefractiveIndex.
      TClass *R__cl = ::ARefractiveIndex::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_ARefractiveIndex(void *p) {
      delete ((::ARefractiveIndex*)p);
   }
   static void deleteArray_ARefractiveIndex(void *p) {
      delete [] ((::ARefractiveIndex*)p);
   }
   static void destruct_ARefractiveIndex(void *p) {
      typedef ::ARefractiveIndex current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ARefractiveIndex(TBuffer &buf, void *obj) {
      ((::ARefractiveIndex*)obj)->::ARefractiveIndex::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::ARefractiveIndex

//______________________________________________________________________________
void ASchottFormula::Streamer(TBuffer &R__b)
{
   // Stream an object of class ASchottFormula.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      ARefractiveIndex::Streamer(R__b);
      R__b.ReadStaticArray((double*)fPar);
      R__b.CheckByteCount(R__s, R__c, ASchottFormula::IsA());
   } else {
      R__c = R__b.WriteVersion(ASchottFormula::IsA(), kTRUE);
      ARefractiveIndex::Streamer(R__b);
      R__b.WriteArray(fPar, 6);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ASchottFormula::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ASchottFormula.
      TClass *R__cl = ::ASchottFormula::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPar[6]", fPar);
      ARefractiveIndex::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ASchottFormula(void *p) {
      return  p ? new(p) ::ASchottFormula : new ::ASchottFormula;
   }
   static void *newArray_ASchottFormula(Long_t nElements, void *p) {
      return p ? new(p) ::ASchottFormula[nElements] : new ::ASchottFormula[nElements];
   }
   // Wrapper around operator delete
   static void delete_ASchottFormula(void *p) {
      delete ((::ASchottFormula*)p);
   }
   static void deleteArray_ASchottFormula(void *p) {
      delete [] ((::ASchottFormula*)p);
   }
   static void destruct_ASchottFormula(void *p) {
      typedef ::ASchottFormula current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ASchottFormula(TBuffer &buf, void *obj) {
      ((::ASchottFormula*)obj)->::ASchottFormula::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::ASchottFormula

//______________________________________________________________________________
void ASellmeierFormula::Streamer(TBuffer &R__b)
{
   // Stream an object of class ASellmeierFormula.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      ARefractiveIndex::Streamer(R__b);
      R__b.ReadStaticArray((double*)fPar);
      R__b.CheckByteCount(R__s, R__c, ASellmeierFormula::IsA());
   } else {
      R__c = R__b.WriteVersion(ASellmeierFormula::IsA(), kTRUE);
      ARefractiveIndex::Streamer(R__b);
      R__b.WriteArray(fPar, 6);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ASellmeierFormula::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ASellmeierFormula.
      TClass *R__cl = ::ASellmeierFormula::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPar[6]", fPar);
      ARefractiveIndex::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ASellmeierFormula(void *p) {
      return  p ? new(p) ::ASellmeierFormula : new ::ASellmeierFormula;
   }
   static void *newArray_ASellmeierFormula(Long_t nElements, void *p) {
      return p ? new(p) ::ASellmeierFormula[nElements] : new ::ASellmeierFormula[nElements];
   }
   // Wrapper around operator delete
   static void delete_ASellmeierFormula(void *p) {
      delete ((::ASellmeierFormula*)p);
   }
   static void deleteArray_ASellmeierFormula(void *p) {
      delete [] ((::ASellmeierFormula*)p);
   }
   static void destruct_ASellmeierFormula(void *p) {
      typedef ::ASellmeierFormula current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ASellmeierFormula(TBuffer &buf, void *obj) {
      ((::ASellmeierFormula*)obj)->::ASellmeierFormula::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::ASellmeierFormula

/********************************************************
* src/ROBASTDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableROBASTDict();

extern "C" void G__set_cpp_environmentROBASTDict() {
  G__cpp_reset_tagtableROBASTDict();
}
#include <new>
extern "C" int G__cpp_dllrevROBASTDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ABorderSurfaceCondition */
static int G__ROBASTDict_485_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ABorderSurfaceCondition* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ABorderSurfaceCondition((TGeoVolume*) G__int(libp->para[0]), (TGeoVolume*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) ABorderSurfaceCondition((TGeoVolume*) G__int(libp->para[0]), (TGeoVolume*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_ABorderSurfaceCondition));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_485_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ABorderSurfaceCondition*) G__getstructoffset())->GetVolume1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_485_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ABorderSurfaceCondition*) G__getstructoffset())->GetVolume2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_485_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ABorderSurfaceCondition*) G__getstructoffset())->GetGaussianRoughness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_485_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ABorderSurfaceCondition::GetSurfaceCondition((TGeoVolume*) G__int(libp->para[0]), (TGeoVolume*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_485_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ABorderSurfaceCondition*) G__getstructoffset())->SetGaussianRoughness((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_485_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ABorderSurfaceCondition::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_485_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ABorderSurfaceCondition::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_485_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ABorderSurfaceCondition::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_485_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ABorderSurfaceCondition::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_485_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ABorderSurfaceCondition*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_485_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ABorderSurfaceCondition::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_485_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ABorderSurfaceCondition::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_485_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ABorderSurfaceCondition::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_485_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ABorderSurfaceCondition::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ABorderSurfaceCondition G__TABorderSurfaceCondition;
static int G__ROBASTDict_485_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ABorderSurfaceCondition*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ABorderSurfaceCondition*) (soff+(sizeof(ABorderSurfaceCondition)*i)))->~G__TABorderSurfaceCondition();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ABorderSurfaceCondition*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ABorderSurfaceCondition*) (soff))->~G__TABorderSurfaceCondition();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ARefractiveIndex */
static int G__ROBASTDict_486_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ARefractiveIndex*) G__getstructoffset())->GetIndex((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_486_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ARefractiveIndex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_486_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ARefractiveIndex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_486_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ARefractiveIndex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_486_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ARefractiveIndex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_486_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ARefractiveIndex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_486_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ARefractiveIndex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_486_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ARefractiveIndex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_486_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ARefractiveIndex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_486_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ARefractiveIndex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ARefractiveIndex G__TARefractiveIndex;
static int G__ROBASTDict_486_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ARefractiveIndex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ARefractiveIndex*) (soff+(sizeof(ARefractiveIndex)*i)))->~G__TARefractiveIndex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ARefractiveIndex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ARefractiveIndex*) (soff))->~G__TARefractiveIndex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ROBASTDict_486_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ARefractiveIndex* dest = (ARefractiveIndex*) G__getstructoffset();
   *dest = *(ARefractiveIndex*) libp->para[0].ref;
   const ARefractiveIndex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ACauchyFormula */
static int G__ROBASTDict_487_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ACauchyFormula* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ACauchyFormula[n];
     } else {
       p = new((void*) gvp) ACauchyFormula[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ACauchyFormula;
     } else {
       p = new((void*) gvp) ACauchyFormula;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_ACauchyFormula));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_487_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ACauchyFormula* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ACauchyFormula(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) ACauchyFormula(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ACauchyFormula((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) ACauchyFormula((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_ACauchyFormula));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_487_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ACauchyFormula* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ACauchyFormula((Double_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) ACauchyFormula((Double_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_ACauchyFormula));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_487_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ACauchyFormula::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_487_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ACauchyFormula::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_487_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ACauchyFormula::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_487_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ACauchyFormula::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_487_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ACauchyFormula*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_487_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ACauchyFormula::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_487_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ACauchyFormula::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_487_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ACauchyFormula::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_487_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ACauchyFormula::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ROBASTDict_487_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ACauchyFormula* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ACauchyFormula(*(ACauchyFormula*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_ACauchyFormula));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ACauchyFormula G__TACauchyFormula;
static int G__ROBASTDict_487_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ACauchyFormula*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ACauchyFormula*) (soff+(sizeof(ACauchyFormula)*i)))->~G__TACauchyFormula();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ACauchyFormula*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ACauchyFormula*) (soff))->~G__TACauchyFormula();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ROBASTDict_487_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ACauchyFormula* dest = (ACauchyFormula*) G__getstructoffset();
   *dest = *(ACauchyFormula*) libp->para[0].ref;
   const ACauchyFormula& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AOpticalComponent */
static int G__ROBASTDict_488_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AOpticalComponent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AOpticalComponent[n];
     } else {
       p = new((void*) gvp) AOpticalComponent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AOpticalComponent;
     } else {
       p = new((void*) gvp) AOpticalComponent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AOpticalComponent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_488_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AOpticalComponent* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AOpticalComponent(
(const char*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1])
, (TGeoMedium*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) AOpticalComponent(
(const char*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1])
, (TGeoMedium*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AOpticalComponent((const char*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) AOpticalComponent((const char*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AOpticalComponent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_488_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AOpticalComponent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_488_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AOpticalComponent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_488_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AOpticalComponent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_488_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AOpticalComponent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_488_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AOpticalComponent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_488_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AOpticalComponent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_488_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AOpticalComponent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_488_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AOpticalComponent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_488_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AOpticalComponent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ROBASTDict_488_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AOpticalComponent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AOpticalComponent(*(AOpticalComponent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AOpticalComponent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AOpticalComponent G__TAOpticalComponent;
static int G__ROBASTDict_488_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AOpticalComponent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AOpticalComponent*) (soff+(sizeof(AOpticalComponent)*i)))->~G__TAOpticalComponent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AOpticalComponent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AOpticalComponent*) (soff))->~G__TAOpticalComponent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AFocalSurface */
static int G__ROBASTDict_489_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AFocalSurface* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AFocalSurface[n];
     } else {
       p = new((void*) gvp) AFocalSurface[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AFocalSurface;
     } else {
       p = new((void*) gvp) AFocalSurface;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AFocalSurface));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_489_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AFocalSurface* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AFocalSurface(
(const char*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1])
, (TGeoMedium*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) AFocalSurface(
(const char*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1])
, (TGeoMedium*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AFocalSurface((const char*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) AFocalSurface((const char*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AFocalSurface));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_489_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AFocalSurface::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_489_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AFocalSurface::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_489_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AFocalSurface::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_489_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AFocalSurface::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_489_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AFocalSurface*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_489_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AFocalSurface::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_489_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AFocalSurface::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_489_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AFocalSurface::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_489_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AFocalSurface::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ROBASTDict_489_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AFocalSurface* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AFocalSurface(*(AFocalSurface*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AFocalSurface));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AFocalSurface G__TAFocalSurface;
static int G__ROBASTDict_489_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AFocalSurface*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AFocalSurface*) (soff+(sizeof(AFocalSurface)*i)))->~G__TAFocalSurface();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AFocalSurface*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AFocalSurface*) (soff))->~G__TAFocalSurface();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AGeoAsphericDisk */
static int G__ROBASTDict_490_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AGeoAsphericDisk* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AGeoAsphericDisk[n];
     } else {
       p = new((void*) gvp) AGeoAsphericDisk[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AGeoAsphericDisk;
     } else {
       p = new((void*) gvp) AGeoAsphericDisk;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AGeoAsphericDisk));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AGeoAsphericDisk* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AGeoAsphericDisk(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) AGeoAsphericDisk(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AGeoAsphericDisk(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) AGeoAsphericDisk(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AGeoAsphericDisk));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AGeoAsphericDisk* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AGeoAsphericDisk(
(const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) AGeoAsphericDisk(
(const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AGeoAsphericDisk(
(const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) AGeoAsphericDisk(
(const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AGeoAsphericDisk));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->CalcdF1dr((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->CalcdF2dr((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->CalcF1((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->CalcF2((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AGeoAsphericDisk*) G__getstructoffset())->ComputeNormal((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const AGeoAsphericDisk*) G__getstructoffset())->Contains((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->DistFromInside((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t*) G__int(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->DistFromInside((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->DistFromInside((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->DistFromInside((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->DistFromOutside((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t*) G__int(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->DistFromOutside((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->DistFromOutside((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->DistFromOutside((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->DistToAsphere((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->DistToInner((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->DistToOuter((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->GetCurve1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->GetCurve2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const AGeoAsphericDisk*) G__getstructoffset())->GetK1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const AGeoAsphericDisk*) G__getstructoffset())->GetK2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->GetNPol1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->GetNPol2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->GetRmax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->GetRmin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->GetZ1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->GetZ2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->Safety((Double_t*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const AGeoAsphericDisk*) G__getstructoffset())->Safety((Double_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AGeoAsphericDisk*) G__getstructoffset())->SetAsphDimensions((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AGeoAsphericDisk*) G__getstructoffset())->SetPolynomials((Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AGeoAsphericDisk*) G__getstructoffset())->SetFineness((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AGeoAsphericDisk::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AGeoAsphericDisk::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AGeoAsphericDisk::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AGeoAsphericDisk::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AGeoAsphericDisk*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AGeoAsphericDisk::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AGeoAsphericDisk::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AGeoAsphericDisk::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_490_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AGeoAsphericDisk::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ROBASTDict_490_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AGeoAsphericDisk* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AGeoAsphericDisk(*(AGeoAsphericDisk*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AGeoAsphericDisk));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AGeoAsphericDisk G__TAGeoAsphericDisk;
static int G__ROBASTDict_490_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AGeoAsphericDisk*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AGeoAsphericDisk*) (soff+(sizeof(AGeoAsphericDisk)*i)))->~G__TAGeoAsphericDisk();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AGeoAsphericDisk*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AGeoAsphericDisk*) (soff))->~G__TAGeoAsphericDisk();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ROBASTDict_490_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AGeoAsphericDisk* dest = (AGeoAsphericDisk*) G__getstructoffset();
   *dest = *(AGeoAsphericDisk*) libp->para[0].ref;
   const AGeoAsphericDisk& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AGeoBezierPcon */
static int G__ROBASTDict_493_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AGeoBezierPcon* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AGeoBezierPcon[n];
     } else {
       p = new((void*) gvp) AGeoBezierPcon[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AGeoBezierPcon;
     } else {
       p = new((void*) gvp) AGeoBezierPcon;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPcon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_493_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AGeoBezierPcon* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AGeoBezierPcon(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
   } else {
     p = new((void*) gvp) AGeoBezierPcon(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPcon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_493_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AGeoBezierPcon* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AGeoBezierPcon(
(const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) AGeoBezierPcon(
(const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPcon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_493_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AGeoBezierPcon*) G__getstructoffset())->Bezier((Double_t) G__double(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_493_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AGeoBezierPcon*) G__getstructoffset())->SetControlPoints((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_493_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AGeoBezierPcon*) G__getstructoffset())->SetControlPoints((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_493_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AGeoBezierPcon*) G__getstructoffset())->SetSections();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_493_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AGeoBezierPcon::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_493_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AGeoBezierPcon::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_493_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AGeoBezierPcon::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_493_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AGeoBezierPcon::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_493_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AGeoBezierPcon*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_493_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AGeoBezierPcon::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_493_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AGeoBezierPcon::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_493_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AGeoBezierPcon::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_493_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AGeoBezierPcon::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ROBASTDict_493_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AGeoBezierPcon* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AGeoBezierPcon(*(AGeoBezierPcon*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPcon));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AGeoBezierPcon G__TAGeoBezierPcon;
static int G__ROBASTDict_493_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AGeoBezierPcon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AGeoBezierPcon*) (soff+(sizeof(AGeoBezierPcon)*i)))->~G__TAGeoBezierPcon();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AGeoBezierPcon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AGeoBezierPcon*) (soff))->~G__TAGeoBezierPcon();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AGeoBezierPgon */
static int G__ROBASTDict_496_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AGeoBezierPgon* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AGeoBezierPgon[n];
     } else {
       p = new((void*) gvp) AGeoBezierPgon[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AGeoBezierPgon;
     } else {
       p = new((void*) gvp) AGeoBezierPgon;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPgon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_496_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AGeoBezierPgon* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AGeoBezierPgon(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   } else {
     p = new((void*) gvp) AGeoBezierPgon(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPgon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_496_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AGeoBezierPgon* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AGeoBezierPgon(
(const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
   } else {
     p = new((void*) gvp) AGeoBezierPgon(
(const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPgon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_496_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AGeoBezierPgon*) G__getstructoffset())->Bezier((Double_t) G__double(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_496_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AGeoBezierPgon*) G__getstructoffset())->SetControlPoints((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_496_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AGeoBezierPgon*) G__getstructoffset())->SetControlPoints((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_496_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AGeoBezierPgon*) G__getstructoffset())->SetSections();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_496_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AGeoBezierPgon::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_496_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AGeoBezierPgon::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_496_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AGeoBezierPgon::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_496_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AGeoBezierPgon::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_496_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AGeoBezierPgon*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_496_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AGeoBezierPgon::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_496_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AGeoBezierPgon::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_496_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AGeoBezierPgon::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_496_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AGeoBezierPgon::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ROBASTDict_496_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AGeoBezierPgon* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AGeoBezierPgon(*(AGeoBezierPgon*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPgon));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AGeoBezierPgon G__TAGeoBezierPgon;
static int G__ROBASTDict_496_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AGeoBezierPgon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AGeoBezierPgon*) (soff+(sizeof(AGeoBezierPgon)*i)))->~G__TAGeoBezierPgon();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AGeoBezierPgon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AGeoBezierPgon*) (soff))->~G__TAGeoBezierPgon();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AGeoWinstonCone2D */
static int G__ROBASTDict_497_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AGeoWinstonCone2D* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AGeoWinstonCone2D[n];
     } else {
       p = new((void*) gvp) AGeoWinstonCone2D[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AGeoWinstonCone2D;
     } else {
       p = new((void*) gvp) AGeoWinstonCone2D;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonCone2D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_497_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AGeoWinstonCone2D* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AGeoWinstonCone2D(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) AGeoWinstonCone2D(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonCone2D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_497_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AGeoWinstonCone2D* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AGeoWinstonCone2D(
(const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) AGeoWinstonCone2D(
(const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonCone2D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_497_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AGeoWinstonCone2D*) G__getstructoffset())->CalcR((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_497_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AGeoWinstonCone2D*) G__getstructoffset())->CalcdRdZ((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_497_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AGeoWinstonCone2D*) G__getstructoffset())->ComputeNormal((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_497_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const AGeoWinstonCone2D*) G__getstructoffset())->Contains((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_497_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) ((const AGeoWinstonCone2D*) G__getstructoffset())->DistFromInside((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t*) G__int(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) ((const AGeoWinstonCone2D*) G__getstructoffset())->DistFromInside((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((const AGeoWinstonCone2D*) G__getstructoffset())->DistFromInside((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const AGeoWinstonCone2D*) G__getstructoffset())->DistFromInside((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_497_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) ((const AGeoWinstonCone2D*) G__getstructoffset())->DistFromOutside((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t*) G__int(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) ((const AGeoWinstonCone2D*) G__getstructoffset())->DistFromOutside((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((const AGeoWinstonCone2D*) G__getstructoffset())->DistFromOutside((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const AGeoWinstonCone2D*) G__getstructoffset())->DistFromOutside((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_497_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AGeoWinstonCone2D*) G__getstructoffset())->DistToParabola((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_497_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const AGeoWinstonCone2D*) G__getstructoffset())->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_497_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((const AGeoWinstonCone2D*) G__getstructoffset())->Safety((Double_t*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((const AGeoWinstonCone2D*) G__getstructoffset())->Safety((Double_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_497_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AGeoWinstonCone2D*) G__getstructoffset())->SetWinstonDimensions((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_497_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AGeoWinstonCone2D::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_497_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AGeoWinstonCone2D::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_497_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AGeoWinstonCone2D::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_497_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AGeoWinstonCone2D::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_497_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AGeoWinstonCone2D*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_497_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AGeoWinstonCone2D::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_497_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AGeoWinstonCone2D::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_497_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AGeoWinstonCone2D::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_497_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AGeoWinstonCone2D::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ROBASTDict_497_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AGeoWinstonCone2D* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AGeoWinstonCone2D(*(AGeoWinstonCone2D*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonCone2D));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AGeoWinstonCone2D G__TAGeoWinstonCone2D;
static int G__ROBASTDict_497_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AGeoWinstonCone2D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AGeoWinstonCone2D*) (soff+(sizeof(AGeoWinstonCone2D)*i)))->~G__TAGeoWinstonCone2D();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AGeoWinstonCone2D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AGeoWinstonCone2D*) (soff))->~G__TAGeoWinstonCone2D();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ROBASTDict_497_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AGeoWinstonCone2D* dest = (AGeoWinstonCone2D*) G__getstructoffset();
   *dest = *(AGeoWinstonCone2D*) libp->para[0].ref;
   const AGeoWinstonCone2D& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AGeoWinstonConePoly */
static int G__ROBASTDict_498_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AGeoWinstonConePoly* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AGeoWinstonConePoly[n];
     } else {
       p = new((void*) gvp) AGeoWinstonConePoly[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AGeoWinstonConePoly;
     } else {
       p = new((void*) gvp) AGeoWinstonConePoly;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonConePoly));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_498_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AGeoWinstonConePoly* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AGeoWinstonConePoly(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) AGeoWinstonConePoly(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonConePoly));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_498_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AGeoWinstonConePoly* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AGeoWinstonConePoly(
(const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) AGeoWinstonConePoly(
(const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonConePoly));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_498_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const AGeoWinstonConePoly*) G__getstructoffset())->InsidePolygon((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_498_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AGeoWinstonConePoly*) G__getstructoffset())->SetWinstonDimensions((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_498_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AGeoWinstonConePoly::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_498_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AGeoWinstonConePoly::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_498_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AGeoWinstonConePoly::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_498_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AGeoWinstonConePoly::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_498_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AGeoWinstonConePoly*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_498_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AGeoWinstonConePoly::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_498_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AGeoWinstonConePoly::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_498_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AGeoWinstonConePoly::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_498_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AGeoWinstonConePoly::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ROBASTDict_498_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AGeoWinstonConePoly* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AGeoWinstonConePoly(*(AGeoWinstonConePoly*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonConePoly));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AGeoWinstonConePoly G__TAGeoWinstonConePoly;
static int G__ROBASTDict_498_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AGeoWinstonConePoly*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AGeoWinstonConePoly*) (soff+(sizeof(AGeoWinstonConePoly)*i)))->~G__TAGeoWinstonConePoly();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AGeoWinstonConePoly*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AGeoWinstonConePoly*) (soff))->~G__TAGeoWinstonConePoly();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ROBASTDict_498_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AGeoWinstonConePoly* dest = (AGeoWinstonConePoly*) G__getstructoffset();
   *dest = *(AGeoWinstonConePoly*) libp->para[0].ref;
   const AGeoWinstonConePoly& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ASchottFormula */
static int G__ROBASTDict_499_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ASchottFormula* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ASchottFormula[n];
     } else {
       p = new((void*) gvp) ASchottFormula[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ASchottFormula;
     } else {
       p = new((void*) gvp) ASchottFormula;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_ASchottFormula));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_499_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ASchottFormula* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ASchottFormula(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
   } else {
     p = new((void*) gvp) ASchottFormula(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_ASchottFormula));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_499_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ASchottFormula* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ASchottFormula((Double_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) ASchottFormula((Double_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_ASchottFormula));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_499_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ASchottFormula::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_499_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ASchottFormula::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_499_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ASchottFormula::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_499_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ASchottFormula::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_499_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ASchottFormula*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_499_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ASchottFormula::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_499_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ASchottFormula::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_499_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ASchottFormula::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_499_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ASchottFormula::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ROBASTDict_499_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ASchottFormula* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ASchottFormula(*(ASchottFormula*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_ASchottFormula));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ASchottFormula G__TASchottFormula;
static int G__ROBASTDict_499_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ASchottFormula*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ASchottFormula*) (soff+(sizeof(ASchottFormula)*i)))->~G__TASchottFormula();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ASchottFormula*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ASchottFormula*) (soff))->~G__TASchottFormula();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ROBASTDict_499_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ASchottFormula* dest = (ASchottFormula*) G__getstructoffset();
   *dest = *(ASchottFormula*) libp->para[0].ref;
   const ASchottFormula& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ASellmeierFormula */
static int G__ROBASTDict_500_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ASellmeierFormula* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ASellmeierFormula[n];
     } else {
       p = new((void*) gvp) ASellmeierFormula[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ASellmeierFormula;
     } else {
       p = new((void*) gvp) ASellmeierFormula;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_ASellmeierFormula));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_500_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ASellmeierFormula* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ASellmeierFormula(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
   } else {
     p = new((void*) gvp) ASellmeierFormula(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_ASellmeierFormula));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_500_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ASellmeierFormula* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ASellmeierFormula((Double_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) ASellmeierFormula((Double_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_ASellmeierFormula));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_500_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ASellmeierFormula::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_500_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ASellmeierFormula::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_500_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ASellmeierFormula::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_500_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ASellmeierFormula::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_500_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ASellmeierFormula*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_500_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ASellmeierFormula::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_500_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ASellmeierFormula::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_500_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ASellmeierFormula::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_500_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ASellmeierFormula::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ROBASTDict_500_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ASellmeierFormula* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ASellmeierFormula(*(ASellmeierFormula*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_ASellmeierFormula));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ASellmeierFormula G__TASellmeierFormula;
static int G__ROBASTDict_500_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ASellmeierFormula*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ASellmeierFormula*) (soff+(sizeof(ASellmeierFormula)*i)))->~G__TASellmeierFormula();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ASellmeierFormula*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ASellmeierFormula*) (soff))->~G__TASellmeierFormula();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ROBASTDict_500_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ASellmeierFormula* dest = (ASellmeierFormula*) G__getstructoffset();
   *dest = *(ASellmeierFormula*) libp->para[0].ref;
   const ASellmeierFormula& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AGlassCatalog */
static int G__ROBASTDict_501_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AGlassCatalog* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AGlassCatalog[n];
     } else {
       p = new((void*) gvp) AGlassCatalog[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AGlassCatalog;
     } else {
       p = new((void*) gvp) AGlassCatalog;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AGlassCatalog));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_501_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AGlassCatalog::GetRefractiveIndex((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_501_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AGlassCatalog::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_501_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AGlassCatalog::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_501_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AGlassCatalog::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_501_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AGlassCatalog::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_501_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AGlassCatalog*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_501_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AGlassCatalog::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_501_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AGlassCatalog::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_501_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AGlassCatalog::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_501_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AGlassCatalog::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ROBASTDict_501_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AGlassCatalog* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AGlassCatalog(*(AGlassCatalog*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AGlassCatalog));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AGlassCatalog G__TAGlassCatalog;
static int G__ROBASTDict_501_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AGlassCatalog*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AGlassCatalog*) (soff+(sizeof(AGlassCatalog)*i)))->~G__TAGlassCatalog();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AGlassCatalog*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AGlassCatalog*) (soff))->~G__TAGlassCatalog();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ROBASTDict_501_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AGlassCatalog* dest = (AGlassCatalog*) G__getstructoffset();
   *dest = *(AGlassCatalog*) libp->para[0].ref;
   const AGlassCatalog& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ALens */
static int G__ROBASTDict_503_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ALens* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ALens[n];
     } else {
       p = new((void*) gvp) ALens[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ALens;
     } else {
       p = new((void*) gvp) ALens;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_ALens));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_503_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ALens* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ALens(
(const char*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1])
, (TGeoMedium*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ALens(
(const char*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1])
, (TGeoMedium*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ALens((const char*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ALens((const char*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_ALens));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_503_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ALens*) G__getstructoffset())->GetRefractiveIndex((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_503_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ALens*) G__getstructoffset())->GetAbsorptionLength((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_503_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ALens*) G__getstructoffset())->SetConstantAbsorptionLength((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_503_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ALens*) G__getstructoffset())->SetConstantRefractiveIndex((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_503_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ALens*) G__getstructoffset())->SetRefractiveIndex((ARefractiveIndex*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_503_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ALens::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_503_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ALens::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_503_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ALens::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_503_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ALens::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_503_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ALens*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_503_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ALens::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_503_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ALens::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_503_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ALens::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_503_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ALens::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ROBASTDict_503_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ALens* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ALens(*(ALens*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_ALens));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ALens G__TALens;
static int G__ROBASTDict_503_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ALens*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ALens*) (soff+(sizeof(ALens)*i)))->~G__TALens();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ALens*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ALens*) (soff))->~G__TALens();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AMirror */
static int G__ROBASTDict_521_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AMirror* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AMirror[n];
     } else {
       p = new((void*) gvp) AMirror[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AMirror;
     } else {
       p = new((void*) gvp) AMirror;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AMirror));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_521_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AMirror* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AMirror(
(const char*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1])
, (TGeoMedium*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) AMirror(
(const char*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1])
, (TGeoMedium*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AMirror((const char*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) AMirror((const char*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AMirror));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_521_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((AMirror*) G__getstructoffset())->GetReflectivity((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_521_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AMirror*) G__getstructoffset())->SetReflectivity((TGraph*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_521_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AMirror*) G__getstructoffset())->SetReflectivity((TGraph2D*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_521_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AMirror::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_521_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AMirror::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_521_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AMirror::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_521_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AMirror::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_521_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AMirror*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_521_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AMirror::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_521_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AMirror::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_521_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AMirror::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_521_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AMirror::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ROBASTDict_521_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AMirror* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AMirror(*(AMirror*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AMirror));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AMirror G__TAMirror;
static int G__ROBASTDict_521_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AMirror*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AMirror*) (soff+(sizeof(AMirror)*i)))->~G__TAMirror();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AMirror*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AMirror*) (soff))->~G__TAMirror();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AObscuration */
static int G__ROBASTDict_522_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AObscuration* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AObscuration[n];
     } else {
       p = new((void*) gvp) AObscuration[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AObscuration;
     } else {
       p = new((void*) gvp) AObscuration;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AObscuration));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_522_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AObscuration* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AObscuration(
(const char*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1])
, (TGeoMedium*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) AObscuration(
(const char*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1])
, (TGeoMedium*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AObscuration((const char*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) AObscuration((const char*) G__int(libp->para[0]), (TGeoShape*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AObscuration));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_522_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AObscuration::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_522_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AObscuration::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_522_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AObscuration::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_522_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AObscuration::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_522_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AObscuration*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_522_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AObscuration::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_522_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AObscuration::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_522_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AObscuration::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_522_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AObscuration::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ROBASTDict_522_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AObscuration* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AObscuration(*(AObscuration*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AObscuration));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AObscuration G__TAObscuration;
static int G__ROBASTDict_522_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AObscuration*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AObscuration*) (soff+(sizeof(AObscuration)*i)))->~G__TAObscuration();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AObscuration*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AObscuration*) (soff))->~G__TAObscuration();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ARay */
static int G__ROBASTDict_610_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ARay* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ARay[n];
     } else {
       p = new((void*) gvp) ARay[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ARay;
     } else {
       p = new((void*) gvp) ARay;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_ARay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ARay* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ARay(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
   } else {
     p = new((void*) gvp) ARay(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Double_t) G__double(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_ARay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ARay*) G__getstructoffset())->Absorb();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ARay*) G__getstructoffset())->Exit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ARay*) G__getstructoffset())->Focus();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ARay*) G__getstructoffset())->GetDirection((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ARay*) G__getstructoffset())->GetLambda());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const ARay*) G__getstructoffset())->GetLastPoint((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ARay*) G__getstructoffset())->IsAbsorbed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ARay*) G__getstructoffset())->IsExited());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ARay*) G__getstructoffset())->IsFocused());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ARay*) G__getstructoffset())->IsRunning());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ARay*) G__getstructoffset())->IsStopped());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ARay*) G__getstructoffset())->IsSuspended());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ARay*) G__getstructoffset())->MakePolyLine3D());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ARay*) G__getstructoffset())->SetDirection((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ARay*) G__getstructoffset())->SetDirection((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ARay*) G__getstructoffset())->SetLambda((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ARay*) G__getstructoffset())->Stop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ARay*) G__getstructoffset())->Suspend();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ARay::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ARay::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ARay::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ARay::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ARay*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ARay::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ARay::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ARay::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_610_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ARay::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ROBASTDict_610_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ARay* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ARay(*(ARay*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_ARay));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ARay G__TARay;
static int G__ROBASTDict_610_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ARay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ARay*) (soff+(sizeof(ARay)*i)))->~G__TARay();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ARay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ARay*) (soff))->~G__TARay();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ARayArray */
static int G__ROBASTDict_612_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ARayArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ARayArray[n];
     } else {
       p = new((void*) gvp) ARayArray[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ARayArray;
     } else {
       p = new((void*) gvp) ARayArray;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_ARayArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_612_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ARayArray*) G__getstructoffset())->Add((ARay*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_612_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ARayArray*) G__getstructoffset())->GetAbsorbed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_612_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ARayArray*) G__getstructoffset())->GetExited());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_612_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ARayArray*) G__getstructoffset())->GetFocused());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_612_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ARayArray*) G__getstructoffset())->GetRunning());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_612_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ARayArray*) G__getstructoffset())->GetStopped());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_612_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ARayArray*) G__getstructoffset())->GetSuspended());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_612_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ARayArray::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_612_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ARayArray::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_612_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ARayArray::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_612_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ARayArray::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_612_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ARayArray*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_612_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ARayArray::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_612_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ARayArray::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_612_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ARayArray::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_612_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ARayArray::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ARayArray G__TARayArray;
static int G__ROBASTDict_612_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ARayArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ARayArray*) (soff+(sizeof(ARayArray)*i)))->~G__TARayArray();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ARayArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ARayArray*) (soff))->~G__TARayArray();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AOpticsManager */
static int G__ROBASTDict_613_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AOpticsManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AOpticsManager[n];
     } else {
       p = new((void*) gvp) AOpticsManager[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AOpticsManager;
     } else {
       p = new((void*) gvp) AOpticsManager;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AOpticsManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AOpticsManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new AOpticsManager((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) AOpticsManager((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AOpticsManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) AOpticsManager::km());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) AOpticsManager::m());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) AOpticsManager::cm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) AOpticsManager::mm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) AOpticsManager::um());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) AOpticsManager::nm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AOpticsManager*) G__getstructoffset())->DisableFresnelReflection((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AOpticsManager*) G__getstructoffset())->DoFresnel((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, *(ARay*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AOpticsManager*) G__getstructoffset())->DoReflection((Double_t) G__double(libp->para[0]), *(ARay*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const AOpticsManager*) G__getstructoffset())->IsFocalSurface((TGeoNode*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const AOpticsManager*) G__getstructoffset())->IsLens((TGeoNode*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const AOpticsManager*) G__getstructoffset())->IsMirror((TGeoNode*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const AOpticsManager*) G__getstructoffset())->IsObscuration((TGeoNode*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const AOpticsManager*) G__getstructoffset())->IsOpticalComponent((TGeoNode*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((AOpticsManager*) G__getstructoffset())->GetFacetNormal();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AOpticsManager*) G__getstructoffset())->SetLimit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AOpticsManager*) G__getstructoffset())->TraceNonSequential(*(ARay*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AOpticsManager*) G__getstructoffset())->TraceNonSequential(*(ARayArray*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AOpticsManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AOpticsManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AOpticsManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AOpticsManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AOpticsManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AOpticsManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AOpticsManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AOpticsManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_613_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AOpticsManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ROBASTDict_613_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AOpticsManager* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AOpticsManager(*(AOpticsManager*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_AOpticsManager));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AOpticsManager G__TAOpticsManager;
static int G__ROBASTDict_613_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AOpticsManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AOpticsManager*) (soff+(sizeof(AOpticsManager)*i)))->~G__TAOpticsManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AOpticsManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AOpticsManager*) (soff))->~G__TAOpticsManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ARayShooter */
static int G__ROBASTDict_615_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ARayShooter* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ARayShooter[n];
     } else {
       p = new((void*) gvp) ARayShooter[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ARayShooter;
     } else {
       p = new((void*) gvp) ARayShooter;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_ARayShooter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_615_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 85, (long) ARayShooter::Circle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TGeoRotation*) G__int(libp->para[4]), (TGeoTranslation*) G__int(libp->para[5])
, (TVector3*) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) ARayShooter::Circle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TGeoRotation*) G__int(libp->para[4]), (TGeoTranslation*) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) ARayShooter::Circle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TGeoRotation*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ARayShooter::Circle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_615_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 85, (long) ARayShooter::RandomCircle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TGeoRotation*) G__int(libp->para[3])
, (TGeoTranslation*) G__int(libp->para[4]), (TVector3*) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) ARayShooter::RandomCircle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TGeoRotation*) G__int(libp->para[3])
, (TGeoTranslation*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ARayShooter::RandomCircle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TGeoRotation*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ARayShooter::RandomCircle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_615_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 85, (long) ARayShooter::RandomCone((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TGeoRotation*) G__int(libp->para[4]), (TGeoTranslation*) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) ARayShooter::RandomCone((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TGeoRotation*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ARayShooter::RandomCone((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_615_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 85, (long) ARayShooter::RandomRectangle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TGeoRotation*) G__int(libp->para[4]), (TGeoTranslation*) G__int(libp->para[5])
, (TVector3*) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) ARayShooter::RandomRectangle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TGeoRotation*) G__int(libp->para[4]), (TGeoTranslation*) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) ARayShooter::RandomRectangle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (TGeoRotation*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ARayShooter::RandomRectangle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_615_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ARayShooter::RandomSphere((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TGeoTranslation*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ARayShooter::RandomSphere((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_615_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) ARayShooter::RandomSphericalCone((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (TGeoRotation*) G__int(libp->para[3])
, (TGeoTranslation*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ARayShooter::RandomSphericalCone((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (TGeoRotation*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ARayShooter::RandomSphericalCone((Double_t) G__double(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_615_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 85, (long) ARayShooter::RandomSquare((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TGeoRotation*) G__int(libp->para[3])
, (TGeoTranslation*) G__int(libp->para[4]), (TVector3*) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) ARayShooter::RandomSquare((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TGeoRotation*) G__int(libp->para[3])
, (TGeoTranslation*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ARayShooter::RandomSquare((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TGeoRotation*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ARayShooter::RandomSquare((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_615_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 85, (long) ARayShooter::Rectangle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (TGeoRotation*) G__int(libp->para[5])
, (TGeoTranslation*) G__int(libp->para[6]), (TVector3*) G__int(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) ARayShooter::Rectangle(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (TGeoRotation*) G__int(libp->para[5])
, (TGeoTranslation*) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) ARayShooter::Rectangle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (TGeoRotation*) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) ARayShooter::Rectangle((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_615_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 85, (long) ARayShooter::Square((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TGeoRotation*) G__int(libp->para[3])
, (TGeoTranslation*) G__int(libp->para[4]), (TVector3*) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) ARayShooter::Square((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TGeoRotation*) G__int(libp->para[3])
, (TGeoTranslation*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ARayShooter::Square((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (TGeoRotation*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ARayShooter::Square((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_615_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ARayShooter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_615_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ARayShooter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_615_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ARayShooter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_615_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ARayShooter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_615_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ARayShooter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_615_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ARayShooter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_615_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ARayShooter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_615_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ARayShooter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ROBASTDict_615_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ARayShooter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ROBASTDict_615_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ARayShooter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ARayShooter(*(ARayShooter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ROBASTDictLN_ARayShooter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ARayShooter G__TARayShooter;
static int G__ROBASTDict_615_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ARayShooter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ARayShooter*) (soff+(sizeof(ARayShooter)*i)))->~G__TARayShooter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ARayShooter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ARayShooter*) (soff))->~G__TARayShooter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ROBASTDict_615_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ARayShooter* dest = (ARayShooter*) G__getstructoffset();
   *dest = *(ARayShooter*) libp->para[0].ref;
   const ARayShooter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* ABorderSurfaceCondition */

/* ARefractiveIndex */

/* ACauchyFormula */

/* AOpticalComponent */

/* AFocalSurface */

/* AGeoAsphericDisk */

/* AGeoBezierPcon */

/* AGeoBezierPgon */

/* AGeoWinstonCone2D */

/* AGeoWinstonConePoly */

/* ASchottFormula */

/* ASellmeierFormula */

/* AGlassCatalog */

/* ALens */

/* AMirror */

/* AObscuration */

/* ARay */

/* ARayArray */

/* AOpticsManager */

/* ARayShooter */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncROBASTDict {
 public:
  G__Sizep2memfuncROBASTDict(): p(&G__Sizep2memfuncROBASTDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncROBASTDict::*p)();
};

size_t G__get_sizep2memfuncROBASTDict()
{
  G__Sizep2memfuncROBASTDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceROBASTDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ROBASTDictLN_ABorderSurfaceCondition))) {
     ABorderSurfaceCondition *G__Lderived;
     G__Lderived=(ABorderSurfaceCondition*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ABorderSurfaceCondition),G__get_linked_tagnum(&G__ROBASTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ROBASTDictLN_ARefractiveIndex))) {
     ARefractiveIndex *G__Lderived;
     G__Lderived=(ARefractiveIndex*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ARefractiveIndex),G__get_linked_tagnum(&G__ROBASTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ROBASTDictLN_ACauchyFormula))) {
     ACauchyFormula *G__Lderived;
     G__Lderived=(ACauchyFormula*)0x1000;
     {
       ARefractiveIndex *G__Lpbase=(ARefractiveIndex*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ACauchyFormula),G__get_linked_tagnum(&G__ROBASTDictLN_ARefractiveIndex),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ACauchyFormula),G__get_linked_tagnum(&G__ROBASTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ROBASTDictLN_AOpticalComponent))) {
     AOpticalComponent *G__Lderived;
     G__Lderived=(AOpticalComponent*)0x1000;
     {
       TGeoVolume *G__Lpbase=(TGeoVolume*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AOpticalComponent),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoVolume),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AOpticalComponent),G__get_linked_tagnum(&G__ROBASTDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AOpticalComponent),G__get_linked_tagnum(&G__ROBASTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGeoAtt *G__Lpbase=(TGeoAtt*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AOpticalComponent),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoAtt),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AOpticalComponent),G__get_linked_tagnum(&G__ROBASTDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AOpticalComponent),G__get_linked_tagnum(&G__ROBASTDictLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AOpticalComponent),G__get_linked_tagnum(&G__ROBASTDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ROBASTDictLN_AFocalSurface))) {
     AFocalSurface *G__Lderived;
     G__Lderived=(AFocalSurface*)0x1000;
     {
       AOpticalComponent *G__Lpbase=(AOpticalComponent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AFocalSurface),G__get_linked_tagnum(&G__ROBASTDictLN_AOpticalComponent),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGeoVolume *G__Lpbase=(TGeoVolume*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AFocalSurface),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoVolume),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AFocalSurface),G__get_linked_tagnum(&G__ROBASTDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AFocalSurface),G__get_linked_tagnum(&G__ROBASTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGeoAtt *G__Lpbase=(TGeoAtt*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AFocalSurface),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoAtt),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AFocalSurface),G__get_linked_tagnum(&G__ROBASTDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AFocalSurface),G__get_linked_tagnum(&G__ROBASTDictLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AFocalSurface),G__get_linked_tagnum(&G__ROBASTDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoAsphericDisk))) {
     AGeoAsphericDisk *G__Lderived;
     G__Lderived=(AGeoAsphericDisk*)0x1000;
     {
       TGeoBBox *G__Lpbase=(TGeoBBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoAsphericDisk),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoBBox),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGeoShape *G__Lpbase=(TGeoShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoAsphericDisk),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoShape),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoAsphericDisk),G__get_linked_tagnum(&G__ROBASTDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoAsphericDisk),G__get_linked_tagnum(&G__ROBASTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPcon))) {
     AGeoBezierPcon *G__Lderived;
     G__Lderived=(AGeoBezierPcon*)0x1000;
     {
       TGeoPcon *G__Lpbase=(TGeoPcon*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPcon),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoPcon),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGeoBBox *G__Lpbase=(TGeoBBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPcon),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoBBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGeoShape *G__Lpbase=(TGeoShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPcon),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoShape),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPcon),G__get_linked_tagnum(&G__ROBASTDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPcon),G__get_linked_tagnum(&G__ROBASTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPgon))) {
     AGeoBezierPgon *G__Lderived;
     G__Lderived=(AGeoBezierPgon*)0x1000;
     {
       TGeoPgon *G__Lpbase=(TGeoPgon*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPgon),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoPgon),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGeoPcon *G__Lpbase=(TGeoPcon*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPgon),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoPcon),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGeoBBox *G__Lpbase=(TGeoBBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPgon),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoBBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGeoShape *G__Lpbase=(TGeoShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPgon),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoShape),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPgon),G__get_linked_tagnum(&G__ROBASTDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPgon),G__get_linked_tagnum(&G__ROBASTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonCone2D))) {
     AGeoWinstonCone2D *G__Lderived;
     G__Lderived=(AGeoWinstonCone2D*)0x1000;
     {
       TGeoBBox *G__Lpbase=(TGeoBBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonCone2D),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoBBox),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGeoShape *G__Lpbase=(TGeoShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonCone2D),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoShape),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonCone2D),G__get_linked_tagnum(&G__ROBASTDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonCone2D),G__get_linked_tagnum(&G__ROBASTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonConePoly))) {
     AGeoWinstonConePoly *G__Lderived;
     G__Lderived=(AGeoWinstonConePoly*)0x1000;
     {
       AGeoWinstonCone2D *G__Lpbase=(AGeoWinstonCone2D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonConePoly),G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonCone2D),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGeoBBox *G__Lpbase=(TGeoBBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonConePoly),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoBBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGeoShape *G__Lpbase=(TGeoShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonConePoly),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoShape),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonConePoly),G__get_linked_tagnum(&G__ROBASTDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonConePoly),G__get_linked_tagnum(&G__ROBASTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ROBASTDictLN_ASchottFormula))) {
     ASchottFormula *G__Lderived;
     G__Lderived=(ASchottFormula*)0x1000;
     {
       ARefractiveIndex *G__Lpbase=(ARefractiveIndex*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ASchottFormula),G__get_linked_tagnum(&G__ROBASTDictLN_ARefractiveIndex),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ASchottFormula),G__get_linked_tagnum(&G__ROBASTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ROBASTDictLN_ASellmeierFormula))) {
     ASellmeierFormula *G__Lderived;
     G__Lderived=(ASellmeierFormula*)0x1000;
     {
       ARefractiveIndex *G__Lpbase=(ARefractiveIndex*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ASellmeierFormula),G__get_linked_tagnum(&G__ROBASTDictLN_ARefractiveIndex),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ASellmeierFormula),G__get_linked_tagnum(&G__ROBASTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ROBASTDictLN_AGlassCatalog))) {
     AGlassCatalog *G__Lderived;
     G__Lderived=(AGlassCatalog*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGlassCatalog),G__get_linked_tagnum(&G__ROBASTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ROBASTDictLN_ALens))) {
     ALens *G__Lderived;
     G__Lderived=(ALens*)0x1000;
     {
       AOpticalComponent *G__Lpbase=(AOpticalComponent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ALens),G__get_linked_tagnum(&G__ROBASTDictLN_AOpticalComponent),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGeoVolume *G__Lpbase=(TGeoVolume*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ALens),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoVolume),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ALens),G__get_linked_tagnum(&G__ROBASTDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ALens),G__get_linked_tagnum(&G__ROBASTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGeoAtt *G__Lpbase=(TGeoAtt*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ALens),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoAtt),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ALens),G__get_linked_tagnum(&G__ROBASTDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ALens),G__get_linked_tagnum(&G__ROBASTDictLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ALens),G__get_linked_tagnum(&G__ROBASTDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ROBASTDictLN_AMirror))) {
     AMirror *G__Lderived;
     G__Lderived=(AMirror*)0x1000;
     {
       AOpticalComponent *G__Lpbase=(AOpticalComponent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AMirror),G__get_linked_tagnum(&G__ROBASTDictLN_AOpticalComponent),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGeoVolume *G__Lpbase=(TGeoVolume*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AMirror),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoVolume),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AMirror),G__get_linked_tagnum(&G__ROBASTDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AMirror),G__get_linked_tagnum(&G__ROBASTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGeoAtt *G__Lpbase=(TGeoAtt*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AMirror),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoAtt),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AMirror),G__get_linked_tagnum(&G__ROBASTDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AMirror),G__get_linked_tagnum(&G__ROBASTDictLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AMirror),G__get_linked_tagnum(&G__ROBASTDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ROBASTDictLN_AObscuration))) {
     AObscuration *G__Lderived;
     G__Lderived=(AObscuration*)0x1000;
     {
       AOpticalComponent *G__Lpbase=(AOpticalComponent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AObscuration),G__get_linked_tagnum(&G__ROBASTDictLN_AOpticalComponent),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGeoVolume *G__Lpbase=(TGeoVolume*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AObscuration),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoVolume),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AObscuration),G__get_linked_tagnum(&G__ROBASTDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AObscuration),G__get_linked_tagnum(&G__ROBASTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGeoAtt *G__Lpbase=(TGeoAtt*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AObscuration),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoAtt),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AObscuration),G__get_linked_tagnum(&G__ROBASTDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AObscuration),G__get_linked_tagnum(&G__ROBASTDictLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AObscuration),G__get_linked_tagnum(&G__ROBASTDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ROBASTDictLN_ARay))) {
     ARay *G__Lderived;
     G__Lderived=(ARay*)0x1000;
     {
       TGeoTrack *G__Lpbase=(TGeoTrack*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ARay),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoTrack),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVirtualGeoTrack *G__Lpbase=(TVirtualGeoTrack*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ARay),G__get_linked_tagnum(&G__ROBASTDictLN_TVirtualGeoTrack),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ARay),G__get_linked_tagnum(&G__ROBASTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGeoAtt *G__Lpbase=(TGeoAtt*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ARay),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoAtt),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ARay),G__get_linked_tagnum(&G__ROBASTDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ARay),G__get_linked_tagnum(&G__ROBASTDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ROBASTDictLN_ARayArray))) {
     ARayArray *G__Lderived;
     G__Lderived=(ARayArray*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ARayArray),G__get_linked_tagnum(&G__ROBASTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ROBASTDictLN_AOpticsManager))) {
     AOpticsManager *G__Lderived;
     G__Lderived=(AOpticsManager*)0x1000;
     {
       TGeoManager *G__Lpbase=(TGeoManager*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AOpticsManager),G__get_linked_tagnum(&G__ROBASTDictLN_TGeoManager),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AOpticsManager),G__get_linked_tagnum(&G__ROBASTDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AOpticsManager),G__get_linked_tagnum(&G__ROBASTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ROBASTDictLN_ARayShooter))) {
     ARayShooter *G__Lderived;
     G__Lderived=(ARayShooter*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ARayShooter),G__get_linked_tagnum(&G__ROBASTDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableROBASTDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ROBASTDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ROBASTDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ROBASTDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ROBASTDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ROBASTDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__ROBASTDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ROBASTDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ROBASTDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ROBASTDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ROBASTDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ROBASTDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ROBASTDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__ROBASTDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__ROBASTDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__ROBASTDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TGeoElementRN*>",117,G__get_linked_tagnum(&G__ROBASTDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*>",117,G__get_linked_tagnum(&G__ROBASTDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TGeoElementRN*,less<int> >",117,G__get_linked_tagnum(&G__ROBASTDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ThreadData_t*>",117,G__get_linked_tagnum(&G__ROBASTDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ROBASTDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ROBASTDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ROBASTDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ROBASTDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGeoVolumeAssembly::ThreadData_t*>",117,G__get_linked_tagnum(&G__ROBASTDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__ROBASTDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__ROBASTDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Long_t,TGeoNavigatorArray*>",117,G__get_linked_tagnum(&G__ROBASTDictLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long,TGeoNavigatorArray*>",117,G__get_linked_tagnum(&G__ROBASTDictLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<long,TGeoNavigatorArray*,less<long> >",117,G__get_linked_tagnum(&G__ROBASTDictLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Long_t,Int_t>",117,G__get_linked_tagnum(&G__ROBASTDictLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__ROBASTDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__ROBASTDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__ROBASTDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__ROBASTDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__ROBASTDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__ROBASTDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__ROBASTDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__ROBASTDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__ROBASTDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__ROBASTDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__ROBASTDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__ROBASTDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__ROBASTDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__ROBASTDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__ROBASTDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__ROBASTDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__ROBASTDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__ROBASTDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__ROBASTDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ABorderSurfaceCondition */
static void G__setup_memvarABorderSurfaceCondition(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ABorderSurfaceCondition));
   { ABorderSurfaceCondition *p; p=(ABorderSurfaceCondition*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TObjArray),-1,-2,4,"fSurfaceArray=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TGeoVolume),-1,-1,4,"fVolume[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ARefractiveIndex */
static void G__setup_memvarARefractiveIndex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ARefractiveIndex));
   { ARefractiveIndex *p; p=(ARefractiveIndex*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ACauchyFormula */
static void G__setup_memvarACauchyFormula(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ACauchyFormula));
   { ACauchyFormula *p; p=(ACauchyFormula*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPar[3]=",0,"Parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AOpticalComponent */
static void G__setup_memvarAOpticalComponent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AOpticalComponent));
   { AOpticalComponent *p; p=(AOpticalComponent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AFocalSurface */
static void G__setup_memvarAFocalSurface(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AFocalSurface));
   { AFocalSurface *p; p=(AFocalSurface*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AGeoAsphericDisk */
static void G__setup_memvarAGeoAsphericDisk(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoAsphericDisk));
   { AGeoAsphericDisk *p; p=(AGeoAsphericDisk*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZ1=",0,"Z of the center of surface 1 (lower)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fZ2=",0,"Z of the center of surface 2 (upper)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCurve1=",0,"Curvature of surface 1 (=1/R1)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCurve2=",0,"Curvature of surface 2 (=1/R2)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRmin=",0,"inner radius");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fRmax=",0,"outer radius");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPol1=",0,"Order of polynomial of surface 1 (=Nmax/2)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNPol2=",0,"Order of polynomial of surface 2");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fK1=",0,"[fNPol1] Coefficients of polynomial of surface 1");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fK2=",0,"[fNPol2] Coefficients of polynomial of surface 2");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSteps=",0,"steps of approximate calculation");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRepeat=",0,"repeat times of approximate calculation");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AGeoBezierPcon */
static void G__setup_memvarAGeoBezierPcon(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPcon));
   { AGeoBezierPcon *p; p=(AGeoBezierPcon*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLength=",0,"fDZ will be fLength/2");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fR1=",0,"Half of the upper aperture");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fR2=",0,"Half of the lower aperture");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TVector2),-1,-1,2,"fP1=",0,"Relative coordinates of the control point 1");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TVector2),-1,-1,2,"fP2=",0,"Relative coordinates of the control point 2");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNcontrol=",0,"Number of control points (0, 1, or 2)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AGeoBezierPgon */
static void G__setup_memvarAGeoBezierPgon(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPgon));
   { AGeoBezierPgon *p; p=(AGeoBezierPgon*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLength=",0,"fDZ will be fLength/2");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fR1=",0,"Half of the upper aperture");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fR2=",0,"Half of the lower aperture");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TVector2),-1,-1,2,"fP1=",0,"Relative coordinates of the control point 1");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TVector2),-1,-1,2,"fP2=",0,"Relative coordinates of the control point 2");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNcontrol=",0,"Number of control points (0, 1, or 2)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AGeoWinstonCone2D */
static void G__setup_memvarAGeoWinstonCone2D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonCone2D));
   { AGeoWinstonCone2D *p; p=(AGeoWinstonCone2D*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fR1=",0,"Half of the larger aperture");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fR2=",0,"Half of the smaller aperture");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTheta=",0,"Cutoff angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fF=",0,"Focal length");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AGeoWinstonConePoly */
static void G__setup_memvarAGeoWinstonConePoly(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonConePoly));
   { AGeoWinstonConePoly *p; p=(AGeoWinstonConePoly*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPolyN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ASchottFormula */
static void G__setup_memvarASchottFormula(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ASchottFormula));
   { ASchottFormula *p; p=(ASchottFormula*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPar[6]=",0,"Parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ASellmeierFormula */
static void G__setup_memvarASellmeierFormula(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ASellmeierFormula));
   { ASellmeierFormula *p; p=(ASellmeierFormula*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPar[6]=",0,"Parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AGlassCatalog */
static void G__setup_memvarAGlassCatalog(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGlassCatalog));
   { AGlassCatalog *p; p=(AGlassCatalog*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__ROBASTDictLN_AGlassCatalogcLcLdA),-1,-2,4,"kNSellmeier=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__ROBASTDictLN_AGlassCatalogcLcLdA),-1,-2,4,"kNSchott=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__ROBASTDictLN_AGlassCatalogcLcLdA),-1,-2,4,"kNCauchy=0LL",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,1,-1,G__defined_typename("Char_t"),-2,4,"kNameCauchy[10]=",0,"Cauchy name");
   G__memvar_setup((void*)0,99,0,1,-1,G__defined_typename("Char_t"),-2,4,"kNameSchott[10]=",0,"SCHOTT name (e.g. BK7)");
   G__memvar_setup((void*)0,99,0,1,-1,G__defined_typename("Char_t"),-2,4,"kNameSellmeier[2][10]=",0,"Sellmeier name (e.g. BK7)");
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"kParCauchy[3]=",0,"Cauchy formula parameters");
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"kParSchott[6]=",0,"SCHOTT formula parameters");
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"kParSellmeier[2][6]=",0,"Sellmeier formula parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ALens */
static void G__setup_memvarALens(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ALens));
   { ALens *p; p=(ALens*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_ARefractiveIndex),-1,-1,4,"fIndex=",0,"Refractive index");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fConstantIndex=",0,"Constant refractive index");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fConstantAbsorptionLength=",0,"Absorption length of the material");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AMirror */
static void G__setup_memvarAMirror(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AMirror));
   { AMirror *p; p=(AMirror*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TGraph),-1,-1,4,"fReflectivity1D=",0,"Reflectivity data (ref v.s. wavelength)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TGraph2D),-1,-1,4,"fReflectivity2D=",0,"Reflectivity data (ref v.s. angle v.s. wavelength)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AObscuration */
static void G__setup_memvarAObscuration(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AObscuration));
   { AObscuration *p; p=(AObscuration*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ARay */
static void G__setup_memvarARay(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ARay));
   { ARay *p; p=(ARay*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__ROBASTDictLN_ARaycLcLdA),-1,-2,4,"kRun=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__ROBASTDictLN_ARaycLcLdA),-1,-2,4,"kStop=1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__ROBASTDictLN_ARaycLcLdA),-1,-2,4,"kExit=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__ROBASTDictLN_ARaycLcLdA),-1,-2,4,"kFocus=3LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__ROBASTDictLN_ARaycLcLdA),-1,-2,4,"kSuspend=4LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__ROBASTDictLN_ARaycLcLdA),-1,-2,4,"kAbsorb=5LL",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLambda=",0,"Wavelength");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TVector3),-1,-1,4,"fDirection=",0,"Current direction vector");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fStatus=",0,"status of ray");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ARayArray */
static void G__setup_memvarARayArray(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ARayArray));
   { ARayArray *p; p=(ARayArray*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TObjArray),-1,-1,4,"fAbsorbed=",0,"Array of absorbed rays");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TObjArray),-1,-1,4,"fExited=",0,"Array of exited rays");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TObjArray),-1,-1,4,"fFocused=",0,"Array of focused rays");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TObjArray),-1,-1,4,"fRunning=",0,"Array of running rays");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TObjArray),-1,-1,4,"fStopped=",0,"Array of stopped rays");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TObjArray),-1,-1,4,"fSuspended=",0,"Array of suspended rays");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AOpticsManager */
static void G__setup_memvarAOpticsManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AOpticsManager));
   { AOpticsManager *p; p=(AOpticsManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fLimit=",0,"Maximum number of crossing calculations");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNThreads=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDisableFresnelReflection=",0,"disable Fresnel reflection");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fStep=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fD1[3]=",0,"! start direction to be shared among methods");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fD2[3]=",0,"! end direction to be shared among methods");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fX1[4]=",0,"! start point to be shared among methods");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fX2[4]=",0,"! end point to be shared among methods");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TGeoNode),-1,-1,4,"fEndNode=",0,"! end node");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TGeoNode),-1,-1,4,"fStartNode=",0,"! start node");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTypeEnd=",0,"! type of end node");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTypeStart=",0,"! type of start node");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__ROBASTDictLN_AOpticsManagercLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kLens=%lldLL",(long long)AOpticsManager::kLens).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__ROBASTDictLN_AOpticsManagercLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kObs=%lldLL",(long long)AOpticsManager::kObs).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__ROBASTDictLN_AOpticsManagercLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kMirror=%lldLL",(long long)AOpticsManager::kMirror).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__ROBASTDictLN_AOpticsManagercLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kFocus=%lldLL",(long long)AOpticsManager::kFocus).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__ROBASTDictLN_AOpticsManagercLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kOpt=%lldLL",(long long)AOpticsManager::kOpt).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__ROBASTDictLN_AOpticsManagercLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kOther=%lldLL",(long long)AOpticsManager::kOther).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__ROBASTDictLN_AOpticsManagercLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kNull=%lldLL",(long long)AOpticsManager::kNull).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ARayShooter */
static void G__setup_memvarARayShooter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ARayShooter));
   { ARayShooter *p; p=(ARayShooter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ROBASTDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarROBASTDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncABorderSurfaceCondition(void) {
   /* ABorderSurfaceCondition */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ABorderSurfaceCondition));
   G__memfunc_setup("ABorderSurfaceCondition",2319,G__ROBASTDict_485_0_1, 105, G__get_linked_tagnum(&G__ROBASTDictLN_ABorderSurfaceCondition), -1, 0, 2, 1, 1, 0, 
"U 'TGeoVolume' - 0 - volume1 U 'TGeoVolume' - 0 - volume2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVolume1",969,G__ROBASTDict_485_0_2, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TGeoVolume), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVolume2",970,G__ROBASTDict_485_0_3, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TGeoVolume), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGaussianRoughness",2073,G__ROBASTDict_485_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSurfaceCondition",1936,G__ROBASTDict_485_0_5, 85, G__get_linked_tagnum(&G__ROBASTDictLN_ABorderSurfaceCondition), -1, 0, 2, 3, 1, 0, 
"U 'TGeoVolume' - 0 - volume1 U 'TGeoVolume' - 0 - volume2", (char*)NULL, (void*) G__func2void( (ABorderSurfaceCondition* (*)(TGeoVolume*, TGeoVolume*))(&ABorderSurfaceCondition::GetSurfaceCondition) ), 0);
   G__memfunc_setup("SetGaussianRoughness",2085,G__ROBASTDict_485_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - sigma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ROBASTDict_485_0_7, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ABorderSurfaceCondition::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ROBASTDict_485_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ABorderSurfaceCondition::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ROBASTDict_485_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ABorderSurfaceCondition::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ROBASTDict_485_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ABorderSurfaceCondition::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ROBASTDict_485_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ROBASTDict_485_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ABorderSurfaceCondition::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ROBASTDict_485_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ABorderSurfaceCondition::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ROBASTDict_485_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ABorderSurfaceCondition::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ROBASTDict_485_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ABorderSurfaceCondition::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ABorderSurfaceCondition", 2445, G__ROBASTDict_485_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncARefractiveIndex(void) {
   /* ARefractiveIndex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ARefractiveIndex));
   G__memfunc_setup("GetIndex",792,G__ROBASTDict_486_0_2, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - lambda", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__ROBASTDict_486_0_3, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ARefractiveIndex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ROBASTDict_486_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ARefractiveIndex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ROBASTDict_486_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ARefractiveIndex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ROBASTDict_486_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ARefractiveIndex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ROBASTDict_486_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ROBASTDict_486_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ARefractiveIndex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ROBASTDict_486_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ARefractiveIndex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ROBASTDict_486_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ARefractiveIndex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ROBASTDict_486_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ARefractiveIndex::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ARefractiveIndex", 1730, G__ROBASTDict_486_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ROBASTDict_486_0_16, (int) ('u'), G__get_linked_tagnum(&G__ROBASTDictLN_ARefractiveIndex), -1, 1, 1, 1, 1, 0, "u 'ARefractiveIndex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncACauchyFormula(void) {
   /* ACauchyFormula */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ACauchyFormula));
   G__memfunc_setup("ACauchyFormula",1396,G__ROBASTDict_487_0_1, 105, G__get_linked_tagnum(&G__ROBASTDictLN_ACauchyFormula), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ACauchyFormula",1396,G__ROBASTDict_487_0_2, 105, G__get_linked_tagnum(&G__ROBASTDictLN_ACauchyFormula), -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - A d - 'Double_t' 0 - B "
"d - 'Double_t' 0 '0.' C", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ACauchyFormula",1396,G__ROBASTDict_487_0_3, 105, G__get_linked_tagnum(&G__ROBASTDictLN_ACauchyFormula), -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIndex",792,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - lambda", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ROBASTDict_487_0_5, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ACauchyFormula::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ROBASTDict_487_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ACauchyFormula::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ROBASTDict_487_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ACauchyFormula::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ROBASTDict_487_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ACauchyFormula::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ROBASTDict_487_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ROBASTDict_487_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ACauchyFormula::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ROBASTDict_487_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ACauchyFormula::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ROBASTDict_487_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ACauchyFormula::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ROBASTDict_487_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ACauchyFormula::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ACauchyFormula", 1396, G__ROBASTDict_487_0_17, (int) ('i'), G__get_linked_tagnum(&G__ROBASTDictLN_ACauchyFormula), -1, 0, 1, 1, 1, 0, "u 'ACauchyFormula' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ACauchyFormula", 1522, G__ROBASTDict_487_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ROBASTDict_487_0_19, (int) ('u'), G__get_linked_tagnum(&G__ROBASTDictLN_ACauchyFormula), -1, 1, 1, 1, 1, 0, "u 'ACauchyFormula' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAOpticalComponent(void) {
   /* AOpticalComponent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AOpticalComponent));
   G__memfunc_setup("AOpticalComponent",1728,G__ROBASTDict_488_0_1, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AOpticalComponent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AOpticalComponent",1728,G__ROBASTDict_488_0_2, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AOpticalComponent), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name U 'TGeoShape' - 10 - shape "
"U 'TGeoMedium' - 10 '0' med", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ROBASTDict_488_0_3, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AOpticalComponent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ROBASTDict_488_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AOpticalComponent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ROBASTDict_488_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AOpticalComponent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ROBASTDict_488_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AOpticalComponent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ROBASTDict_488_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ROBASTDict_488_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AOpticalComponent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ROBASTDict_488_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AOpticalComponent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ROBASTDict_488_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AOpticalComponent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ROBASTDict_488_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AOpticalComponent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AOpticalComponent", 1728, G__ROBASTDict_488_0_15, (int) ('i'), G__get_linked_tagnum(&G__ROBASTDictLN_AOpticalComponent), -1, 0, 1, 1, 1, 0, "u 'AOpticalComponent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AOpticalComponent", 1854, G__ROBASTDict_488_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAFocalSurface(void) {
   /* AFocalSurface */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AFocalSurface));
   G__memfunc_setup("AFocalSurface",1263,G__ROBASTDict_489_0_1, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AFocalSurface), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AFocalSurface",1263,G__ROBASTDict_489_0_2, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AFocalSurface), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name U 'TGeoShape' - 10 - shape "
"U 'TGeoMedium' - 10 '0' med", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ROBASTDict_489_0_3, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AFocalSurface::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ROBASTDict_489_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AFocalSurface::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ROBASTDict_489_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AFocalSurface::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ROBASTDict_489_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AFocalSurface::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ROBASTDict_489_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ROBASTDict_489_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AFocalSurface::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ROBASTDict_489_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AFocalSurface::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ROBASTDict_489_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AFocalSurface::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ROBASTDict_489_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AFocalSurface::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AFocalSurface", 1263, G__ROBASTDict_489_0_15, (int) ('i'), G__get_linked_tagnum(&G__ROBASTDictLN_AFocalSurface), -1, 0, 1, 1, 1, 0, "u 'AFocalSurface' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AFocalSurface", 1389, G__ROBASTDict_489_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAGeoAsphericDisk(void) {
   /* AGeoAsphericDisk */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoAsphericDisk));
   G__memfunc_setup("DeleteArrays",1221,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AGeoAsphericDisk",1558,G__ROBASTDict_490_0_2, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AGeoAsphericDisk), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AGeoAsphericDisk",1558,G__ROBASTDict_490_0_3, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AGeoAsphericDisk), -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - z1 d - 'Double_t' 0 - curve1 "
"d - 'Double_t' 0 - z2 d - 'Double_t' 0 - curve2 "
"d - 'Double_t' 0 - rmax d - 'Double_t' 0 '0' rmin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AGeoAsphericDisk",1558,G__ROBASTDict_490_0_4, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AGeoAsphericDisk), -1, 0, 7, 1, 1, 0, 
"C - - 10 - name d - 'Double_t' 0 - z1 "
"d - 'Double_t' 0 - curve1 d - 'Double_t' 0 - z2 "
"d - 'Double_t' 0 - curve2 d - 'Double_t' 0 - rmax "
"d - 'Double_t' 0 '0' rmin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Capacity",814,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcdF1dr",804,G__ROBASTDict_490_0_6, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 40, "d - 'Double_t' 0 - r", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcdF2dr",805,G__ROBASTDict_490_0_7, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 40, "d - 'Double_t' 0 - r", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcF1",490,G__ROBASTDict_490_0_8, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 40, "d - 'Double_t' 0 - r", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcF2",491,G__ROBASTDict_490_0_9, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 40, "d - 'Double_t' 0 - r", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ComputeBBox",1096,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ComputeNormal",1350,G__ROBASTDict_490_0_11, 121, -1, -1, 0, 3, 1, 1, 0, 
"D - 'Double_t' 0 - point D - 'Double_t' 0 - dir "
"D - 'Double_t' 0 - norm", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Contains",831,G__ROBASTDict_490_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 0 - point", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistancetoPrimitive",1991,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistFromInside",1412,G__ROBASTDict_490_0_14, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 1, 8, 
"D - 'Double_t' 0 - point D - 'Double_t' 0 - dir "
"i - 'Int_t' 0 '1' iact d - 'Double_t' 0 'TGeoShape::Big()' step "
"D - 'Double_t' 0 '0' safe", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistFromOutside",1541,G__ROBASTDict_490_0_15, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 1, 8, 
"D - 'Double_t' 0 - point D - 'Double_t' 0 - dir "
"i - 'Int_t' 0 '1' iact d - 'Double_t' 0 'TGeoShape::Big()' step "
"D - 'Double_t' 0 '0' safe", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistToAsphere",1311,G__ROBASTDict_490_0_16, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - i D - 'Double_t' 0 - point "
"D - 'Double_t' 0 - dir", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistToInner",1107,G__ROBASTDict_490_0_17, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"D - 'Double_t' 0 - point D - 'Double_t' 0 - dir", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistToOuter",1126,G__ROBASTDict_490_0_18, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"D - 'Double_t' 0 - point D - 'Double_t' 0 - dir", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Divide",597,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TGeoVolume), -1, 0, 6, 1, 1, 0, 
"U 'TGeoVolume' - 0 - voldiv C - - 10 - divname "
"i - 'Int_t' 0 - iaxis i - 'Int_t' 0 - ndiv "
"d - 'Double_t' 0 - start d - 'Double_t' 0 - step", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBoundingCylinder",1936,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "D - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBuffer3D",1009,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__ROBASTDictLN_TBuffer3D), -1, 1, 2, 1, 1, 9, 
"i - 'Int_t' 0 - reqSections g - 'Bool_t' 0 - localFrame", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetByteCount",1213,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", "to be checked", (void*) NULL, 1);
   G__memfunc_setup("GetCurve1",854,G__ROBASTDict_490_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurve2",855,G__ROBASTDict_490_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetK1",412,G__ROBASTDict_490_0_25, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetK2",413,G__ROBASTDict_490_0_26, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMakeRuntimeShape",1907,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TGeoShape), -1, 0, 2, 1, 1, 8, 
"U 'TGeoShape' - 0 - - U 'TGeoMatrix' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMeshNumbers",1417,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"i - 'Int_t' 1 - nvert i - 'Int_t' 1 - nsegs "
"i - 'Int_t' 1 - npols", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNmeshVertices",1632,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNPol1",714,G__ROBASTDict_490_0_30, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNPol2",715,G__ROBASTDict_490_0_31, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRmax",696,G__ROBASTDict_490_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRmin",694,G__ROBASTDict_490_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ1",427,G__ROBASTDict_490_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ2",428,G__ROBASTDict_490_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InspectShape",1223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsCylType",902,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeBuffer3D",1103,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TBuffer3D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Safety",620,G__ROBASTDict_490_0_40, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"D - 'Double_t' 0 - point g - 'Bool_t' 0 'kTRUE' in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAsphDimensions",1745,G__ROBASTDict_490_0_41, 121, -1, -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - curve1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - curve2 "
"d - 'Double_t' 0 - rmax d - 'Double_t' 0 - rmin", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDimensions",1349,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "D - 'Double_t' 0 - points", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "F - 'Float_t' 0 - points", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPolynomials",1475,G__ROBASTDict_490_0_45, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - n1 D - 'Double_t' 10 - k1 "
"i - 'Int_t' 0 - n2 D - 'Double_t' 10 - k2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSegsAndPols",1391,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TBuffer3D' - 1 - buff", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFineness",1127,G__ROBASTDict_490_0_47, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - steps i - 'Int_t' 0 - repeat", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Sizeof3D",743,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ROBASTDict_490_0_49, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AGeoAsphericDisk::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ROBASTDict_490_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AGeoAsphericDisk::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ROBASTDict_490_0_51, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AGeoAsphericDisk::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ROBASTDict_490_0_52, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AGeoAsphericDisk::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ROBASTDict_490_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ROBASTDict_490_0_57, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AGeoAsphericDisk::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ROBASTDict_490_0_58, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AGeoAsphericDisk::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ROBASTDict_490_0_59, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AGeoAsphericDisk::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ROBASTDict_490_0_60, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AGeoAsphericDisk::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AGeoAsphericDisk", 1558, G__ROBASTDict_490_0_61, (int) ('i'), G__get_linked_tagnum(&G__ROBASTDictLN_AGeoAsphericDisk), -1, 0, 1, 1, 1, 0, "u 'AGeoAsphericDisk' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AGeoAsphericDisk", 1684, G__ROBASTDict_490_0_62, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ROBASTDict_490_0_63, (int) ('u'), G__get_linked_tagnum(&G__ROBASTDictLN_AGeoAsphericDisk), -1, 1, 1, 1, 1, 0, "u 'AGeoAsphericDisk' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAGeoBezierPcon(void) {
   /* AGeoBezierPcon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPcon));
   G__memfunc_setup("AGeoBezierPcon",1357,G__ROBASTDict_493_0_1, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPcon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AGeoBezierPcon",1357,G__ROBASTDict_493_0_2, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPcon), -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - phi d - 'Double_t' 0 - dphi "
"i - 'Int_t' 0 - nz d - 'Double_t' 0 - r1 "
"d - 'Double_t' 0 - r2 d - 'Double_t' 0 - dz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AGeoBezierPcon",1357,G__ROBASTDict_493_0_3, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPcon), -1, 0, 7, 1, 1, 0, 
"C - - 10 - name d - 'Double_t' 0 - phi "
"d - 'Double_t' 0 - dphi i - 'Int_t' 0 - nz "
"d - 'Double_t' 0 - r1 d - 'Double_t' 0 - r2 "
"d - 'Double_t' 0 - dz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bezier",609,G__ROBASTDict_493_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - t d - 'Double_t' 1 - r "
"d - 'Double_t' 1 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetControlPoints",1674,G__ROBASTDict_493_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - r1 d - 'Double_t' 0 - z1", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetControlPoints",1674,G__ROBASTDict_493_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - r1 d - 'Double_t' 0 - z1 "
"d - 'Double_t' 0 - r2 d - 'Double_t' 0 - z2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSections",1140,G__ROBASTDict_493_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ROBASTDict_493_0_8, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AGeoBezierPcon::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ROBASTDict_493_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AGeoBezierPcon::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ROBASTDict_493_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AGeoBezierPcon::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ROBASTDict_493_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AGeoBezierPcon::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ROBASTDict_493_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ROBASTDict_493_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AGeoBezierPcon::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ROBASTDict_493_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AGeoBezierPcon::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ROBASTDict_493_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AGeoBezierPcon::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ROBASTDict_493_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AGeoBezierPcon::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AGeoBezierPcon", 1357, G__ROBASTDict_493_0_20, (int) ('i'), G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPcon), -1, 0, 1, 1, 1, 0, "u 'AGeoBezierPcon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AGeoBezierPcon", 1483, G__ROBASTDict_493_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAGeoBezierPgon(void) {
   /* AGeoBezierPgon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPgon));
   G__memfunc_setup("AGeoBezierPgon",1361,G__ROBASTDict_496_0_1, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPgon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AGeoBezierPgon",1361,G__ROBASTDict_496_0_2, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPgon), -1, 0, 7, 1, 1, 0, 
"d - 'Double_t' 0 - phi d - 'Double_t' 0 - dphi "
"i - 'Int_t' 0 - nedges i - 'Int_t' 0 - nz "
"d - 'Double_t' 0 - r1 d - 'Double_t' 0 - r2 "
"d - 'Double_t' 0 - dz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AGeoBezierPgon",1361,G__ROBASTDict_496_0_3, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPgon), -1, 0, 8, 1, 1, 0, 
"C - - 10 - name d - 'Double_t' 0 - phi "
"d - 'Double_t' 0 - dphi i - 'Int_t' 0 - nedges "
"i - 'Int_t' 0 - nz d - 'Double_t' 0 - r1 "
"d - 'Double_t' 0 - r2 d - 'Double_t' 0 - dz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bezier",609,G__ROBASTDict_496_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - t d - 'Double_t' 1 - r "
"d - 'Double_t' 1 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetControlPoints",1674,G__ROBASTDict_496_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - r1 d - 'Double_t' 0 - z1", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetControlPoints",1674,G__ROBASTDict_496_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - r1 d - 'Double_t' 0 - z1 "
"d - 'Double_t' 0 - r2 d - 'Double_t' 0 - z2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSections",1140,G__ROBASTDict_496_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ROBASTDict_496_0_8, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AGeoBezierPgon::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ROBASTDict_496_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AGeoBezierPgon::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ROBASTDict_496_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AGeoBezierPgon::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ROBASTDict_496_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AGeoBezierPgon::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ROBASTDict_496_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ROBASTDict_496_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AGeoBezierPgon::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ROBASTDict_496_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AGeoBezierPgon::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ROBASTDict_496_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AGeoBezierPgon::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ROBASTDict_496_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AGeoBezierPgon::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AGeoBezierPgon", 1361, G__ROBASTDict_496_0_20, (int) ('i'), G__get_linked_tagnum(&G__ROBASTDictLN_AGeoBezierPgon), -1, 0, 1, 1, 1, 0, "u 'AGeoBezierPgon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AGeoBezierPgon", 1487, G__ROBASTDict_496_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAGeoWinstonCone2D(void) {
   /* AGeoWinstonCone2D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonCone2D));
   G__memfunc_setup("AGeoWinstonCone2D",1609,G__ROBASTDict_497_0_1, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonCone2D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AGeoWinstonCone2D",1609,G__ROBASTDict_497_0_2, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonCone2D), -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - r1 d - 'Double_t' 0 - r2 "
"d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AGeoWinstonCone2D",1609,G__ROBASTDict_497_0_3, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonCone2D), -1, 0, 4, 1, 1, 0, 
"C - - 10 - name d - 'Double_t' 0 - r1 "
"d - 'Double_t' 0 - r2 d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcR",453,G__ROBASTDict_497_0_4, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 40, "d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcdRdZ",743,G__ROBASTDict_497_0_5, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 40, "d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Capacity",814,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ComputeBBox",1096,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ComputeNormal",1350,G__ROBASTDict_497_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"D - 'Double_t' 0 - point D - 'Double_t' 0 - dir "
"D - 'Double_t' 0 - norm", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Contains",831,G__ROBASTDict_497_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 0 - point", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistancetoPrimitive",1991,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistFromInside",1412,G__ROBASTDict_497_0_11, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 1, 8, 
"D - 'Double_t' 0 - point D - 'Double_t' 0 - dir "
"i - 'Int_t' 0 '1' iact d - 'Double_t' 0 'TGeoShape::Big()' step "
"D - 'Double_t' 0 '0' safe", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistFromOutside",1541,G__ROBASTDict_497_0_12, 100, -1, G__defined_typename("Double_t"), 0, 5, 1, 1, 8, 
"D - 'Double_t' 0 - point D - 'Double_t' 0 - dir "
"i - 'Int_t' 0 '1' iact d - 'Double_t' 0 'TGeoShape::Big()' step "
"D - 'Double_t' 0 '0' safe", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistToParabola",1401,G__ROBASTDict_497_0_13, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 8, 
"D - 'Double_t' 0 - point D - 'Double_t' 0 - dir "
"d - 'Double_t' 0 - phi d - 'Double_t' 0 - open", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Divide",597,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TGeoVolume), -1, 0, 6, 1, 1, 0, 
"U 'TGeoVolume' - 0 - voldiv C - - 10 - divname "
"i - 'Int_t' 0 - iaxis i - 'Int_t' 0 - ndiv "
"d - 'Double_t' 0 - start d - 'Double_t' 0 - step", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBoundingCylinder",1936,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "D - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBuffer3D",1009,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__ROBASTDictLN_TBuffer3D), -1, 1, 2, 1, 1, 9, 
"i - 'Int_t' 0 - reqSections g - 'Bool_t' 0 - localFrame", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMakeRuntimeShape",1907,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TGeoShape), -1, 0, 2, 1, 1, 8, 
"U 'TGeoShape' - 0 - - U 'TGeoMatrix' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMeshNumbers",1417,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"i - 'Int_t' 1 - nvert i - 'Int_t' 1 - nsegs "
"i - 'Int_t' 1 - npols", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNmeshVertices",1632,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTheta",790,G__ROBASTDict_497_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InspectShape",1223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsCylType",902,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeBuffer3D",1103,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TBuffer3D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Safety",620,G__ROBASTDict_497_0_24, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"D - 'Double_t' 0 - point g - 'Bool_t' 0 'kTRUE' in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetWinstonDimensions",2103,G__ROBASTDict_497_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - r1 d - 'Double_t' 0 - r2 "
"d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDimensions",1349,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "D - 'Double_t' 0 - points", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "F - 'Float_t' 0 - points", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSegsAndPols",1391,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TBuffer3D' - 1 - buff", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Sizeof3D",743,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ROBASTDict_497_0_32, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AGeoWinstonCone2D::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ROBASTDict_497_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AGeoWinstonCone2D::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ROBASTDict_497_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AGeoWinstonCone2D::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ROBASTDict_497_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AGeoWinstonCone2D::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ROBASTDict_497_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ROBASTDict_497_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AGeoWinstonCone2D::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ROBASTDict_497_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AGeoWinstonCone2D::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ROBASTDict_497_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AGeoWinstonCone2D::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ROBASTDict_497_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AGeoWinstonCone2D::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AGeoWinstonCone2D", 1609, G__ROBASTDict_497_0_44, (int) ('i'), G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonCone2D), -1, 0, 1, 1, 1, 0, "u 'AGeoWinstonCone2D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AGeoWinstonCone2D", 1735, G__ROBASTDict_497_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ROBASTDict_497_0_46, (int) ('u'), G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonCone2D), -1, 1, 1, 1, 1, 0, "u 'AGeoWinstonCone2D' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAGeoWinstonConePoly(void) {
   /* AGeoWinstonConePoly */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonConePoly));
   G__memfunc_setup("AGeoWinstonConePoly",1911,G__ROBASTDict_498_0_1, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonConePoly), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AGeoWinstonConePoly",1911,G__ROBASTDict_498_0_2, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonConePoly), -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - r1 d - 'Double_t' 0 - r2 "
"i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AGeoWinstonConePoly",1911,G__ROBASTDict_498_0_3, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonConePoly), -1, 0, 4, 1, 1, 0, 
"C - - 10 - name d - 'Double_t' 0 - r1 "
"d - 'Double_t' 0 - r2 i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ComputeBBox",1096,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ComputeNormal",1350,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"D - 'Double_t' 0 - point D - 'Double_t' 0 - dir "
"D - 'Double_t' 0 - norm", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Contains",831,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 0 - point", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistancetoPrimitive",1991,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - px i - 'Int_t' 0 - py", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistFromInside",1412,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 5, 1, 1, 8, 
"D - 'Double_t' 0 - point D - 'Double_t' 0 - dir "
"i - 'Int_t' 0 '1' iact d - 'Double_t' 0 'TGeoShape::Big()' step "
"D - 'Double_t' 0 '0' safe", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DistFromOutside",1541,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 5, 1, 1, 8, 
"D - 'Double_t' 0 - point D - 'Double_t' 0 - dir "
"i - 'Int_t' 0 '1' iact d - 'Double_t' 0 'TGeoShape::Big()' step "
"D - 'Double_t' 0 '0' safe", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBoundingCylinder",1936,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "D - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBuffer3D",1009,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__ROBASTDictLN_TBuffer3D), -1, 1, 2, 1, 1, 9, 
"i - 'Int_t' 0 - reqSections g - 'Bool_t' 0 - localFrame", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMeshNumbers",1417,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"i - 'Int_t' 1 - nvert i - 'Int_t' 1 - nsegs "
"i - 'Int_t' 1 - npols", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNmeshVertices",1632,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InsidePolygon",1348,G__ROBASTDict_498_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 8, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - r", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InspectShape",1223,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeBuffer3D",1103,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TBuffer3D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SavePrimitive",1352,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 - out C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetWinstonDimensions",2103,G__ROBASTDict_498_0_18, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - r1 d - 'Double_t' 0 - r2 "
"i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDimensions",1349,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "D - 'Double_t' 0 - points", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPoints",937,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "F - 'Float_t' 0 - points", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSegsAndPols",1391,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "u 'TBuffer3D' - 1 - buff", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Sizeof3D",743,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ROBASTDict_498_0_24, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AGeoWinstonConePoly::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ROBASTDict_498_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AGeoWinstonConePoly::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ROBASTDict_498_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AGeoWinstonConePoly::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ROBASTDict_498_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AGeoWinstonConePoly::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ROBASTDict_498_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ROBASTDict_498_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AGeoWinstonConePoly::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ROBASTDict_498_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AGeoWinstonConePoly::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ROBASTDict_498_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AGeoWinstonConePoly::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ROBASTDict_498_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AGeoWinstonConePoly::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AGeoWinstonConePoly", 1911, G__ROBASTDict_498_0_36, (int) ('i'), G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonConePoly), -1, 0, 1, 1, 1, 0, "u 'AGeoWinstonConePoly' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AGeoWinstonConePoly", 2037, G__ROBASTDict_498_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ROBASTDict_498_0_38, (int) ('u'), G__get_linked_tagnum(&G__ROBASTDictLN_AGeoWinstonConePoly), -1, 1, 1, 1, 1, 0, "u 'AGeoWinstonConePoly' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncASchottFormula(void) {
   /* ASchottFormula */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ASchottFormula));
   G__memfunc_setup("ASchottFormula",1420,G__ROBASTDict_499_0_1, 105, G__get_linked_tagnum(&G__ROBASTDictLN_ASchottFormula), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ASchottFormula",1420,G__ROBASTDict_499_0_2, 105, G__get_linked_tagnum(&G__ROBASTDictLN_ASchottFormula), -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - A0 d - 'Double_t' 0 - A1 "
"d - 'Double_t' 0 - A2 d - 'Double_t' 0 - A3 "
"d - 'Double_t' 0 - A4 d - 'Double_t' 0 - A5", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ASchottFormula",1420,G__ROBASTDict_499_0_3, 105, G__get_linked_tagnum(&G__ROBASTDictLN_ASchottFormula), -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIndex",792,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - lambda", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ROBASTDict_499_0_5, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ASchottFormula::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ROBASTDict_499_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ASchottFormula::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ROBASTDict_499_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ASchottFormula::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ROBASTDict_499_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ASchottFormula::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ROBASTDict_499_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ROBASTDict_499_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ASchottFormula::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ROBASTDict_499_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ASchottFormula::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ROBASTDict_499_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ASchottFormula::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ROBASTDict_499_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ASchottFormula::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ASchottFormula", 1420, G__ROBASTDict_499_0_17, (int) ('i'), G__get_linked_tagnum(&G__ROBASTDictLN_ASchottFormula), -1, 0, 1, 1, 1, 0, "u 'ASchottFormula' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ASchottFormula", 1546, G__ROBASTDict_499_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ROBASTDict_499_0_19, (int) ('u'), G__get_linked_tagnum(&G__ROBASTDictLN_ASchottFormula), -1, 1, 1, 1, 1, 0, "u 'ASchottFormula' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncASellmeierFormula(void) {
   /* ASellmeierFormula */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ASellmeierFormula));
   G__memfunc_setup("ASellmeierFormula",1721,G__ROBASTDict_500_0_1, 105, G__get_linked_tagnum(&G__ROBASTDictLN_ASellmeierFormula), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ASellmeierFormula",1721,G__ROBASTDict_500_0_2, 105, G__get_linked_tagnum(&G__ROBASTDictLN_ASellmeierFormula), -1, 0, 6, 1, 1, 0, 
"d - 'Double_t' 0 - B1 d - 'Double_t' 0 - B2 "
"d - 'Double_t' 0 - B3 d - 'Double_t' 0 - C1 "
"d - 'Double_t' 0 - C2 d - 'Double_t' 0 - C3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ASellmeierFormula",1721,G__ROBASTDict_500_0_3, 105, G__get_linked_tagnum(&G__ROBASTDictLN_ASellmeierFormula), -1, 0, 1, 1, 1, 0, "D - 'Double_t' 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIndex",792,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - lambda", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ROBASTDict_500_0_5, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ASellmeierFormula::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ROBASTDict_500_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ASellmeierFormula::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ROBASTDict_500_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ASellmeierFormula::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ROBASTDict_500_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ASellmeierFormula::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ROBASTDict_500_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ROBASTDict_500_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ASellmeierFormula::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ROBASTDict_500_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ASellmeierFormula::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ROBASTDict_500_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ASellmeierFormula::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ROBASTDict_500_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ASellmeierFormula::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ASellmeierFormula", 1721, G__ROBASTDict_500_0_17, (int) ('i'), G__get_linked_tagnum(&G__ROBASTDictLN_ASellmeierFormula), -1, 0, 1, 1, 1, 0, "u 'ASellmeierFormula' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ASellmeierFormula", 1847, G__ROBASTDict_500_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ROBASTDict_500_0_19, (int) ('u'), G__get_linked_tagnum(&G__ROBASTDictLN_ASellmeierFormula), -1, 1, 1, 1, 1, 0, "u 'ASellmeierFormula' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAGlassCatalog(void) {
   /* AGlassCatalog */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AGlassCatalog));
   G__memfunc_setup("AGlassCatalog",1270,G__ROBASTDict_501_0_1, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AGlassCatalog), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefractiveIndex",1827,G__ROBASTDict_501_0_2, 85, G__get_linked_tagnum(&G__ROBASTDictLN_ARefractiveIndex), -1, 0, 1, 3, 1, 0, "C - - 10 - name", (char*)NULL, (void*) G__func2void( (ARefractiveIndex* (*)(const char*))(&AGlassCatalog::GetRefractiveIndex) ), 0);
   G__memfunc_setup("Class",502,G__ROBASTDict_501_0_3, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AGlassCatalog::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ROBASTDict_501_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AGlassCatalog::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ROBASTDict_501_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AGlassCatalog::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ROBASTDict_501_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AGlassCatalog::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ROBASTDict_501_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ROBASTDict_501_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AGlassCatalog::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ROBASTDict_501_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AGlassCatalog::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ROBASTDict_501_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AGlassCatalog::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ROBASTDict_501_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AGlassCatalog::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AGlassCatalog", 1270, G__ROBASTDict_501_0_15, (int) ('i'), G__get_linked_tagnum(&G__ROBASTDictLN_AGlassCatalog), -1, 0, 1, 1, 1, 0, "u 'AGlassCatalog' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AGlassCatalog", 1396, G__ROBASTDict_501_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ROBASTDict_501_0_17, (int) ('u'), G__get_linked_tagnum(&G__ROBASTDictLN_AGlassCatalog), -1, 1, 1, 1, 1, 0, "u 'AGlassCatalog' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncALens(void) {
   /* ALens */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ALens));
   G__memfunc_setup("ALens",467,G__ROBASTDict_503_0_1, 105, G__get_linked_tagnum(&G__ROBASTDictLN_ALens), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ALens",467,G__ROBASTDict_503_0_2, 105, G__get_linked_tagnum(&G__ROBASTDictLN_ALens), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name U 'TGeoShape' - 10 - shape "
"U 'TGeoMedium' - 10 '0' med", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefractiveIndex",1827,G__ROBASTDict_503_0_3, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - lambda", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAbsorptionLength",1955,G__ROBASTDict_503_0_4, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - lambda", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetConstantAbsorptionLength",2809,G__ROBASTDict_503_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - length", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetConstantRefractiveIndex",2681,G__ROBASTDict_503_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - index", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRefractiveIndex",1839,G__ROBASTDict_503_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'ARefractiveIndex' - 0 - index", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ROBASTDict_503_0_8, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ALens::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ROBASTDict_503_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ALens::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ROBASTDict_503_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ALens::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ROBASTDict_503_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ALens::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ROBASTDict_503_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ROBASTDict_503_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ALens::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ROBASTDict_503_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ALens::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ROBASTDict_503_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ALens::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ROBASTDict_503_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ALens::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ALens", 467, G__ROBASTDict_503_0_20, (int) ('i'), G__get_linked_tagnum(&G__ROBASTDictLN_ALens), -1, 0, 1, 1, 1, 0, "u 'ALens' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ALens", 593, G__ROBASTDict_503_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAMirror(void) {
   /* AMirror */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AMirror));
   G__memfunc_setup("AMirror",700,G__ROBASTDict_521_0_1, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AMirror), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AMirror",700,G__ROBASTDict_521_0_2, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AMirror), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name U 'TGeoShape' - 10 - shape "
"U 'TGeoMedium' - 10 '0' med", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReflectivity",1562,G__ROBASTDict_521_0_3, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - lambda d - 'Double_t' 0 - angle", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetReflectivity",1574,G__ROBASTDict_521_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGraph' - 0 - ref", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetReflectivity",1574,G__ROBASTDict_521_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGraph2D' - 0 - ref", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ROBASTDict_521_0_6, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AMirror::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ROBASTDict_521_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AMirror::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ROBASTDict_521_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AMirror::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ROBASTDict_521_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AMirror::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ROBASTDict_521_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ROBASTDict_521_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AMirror::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ROBASTDict_521_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AMirror::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ROBASTDict_521_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AMirror::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ROBASTDict_521_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AMirror::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AMirror", 700, G__ROBASTDict_521_0_18, (int) ('i'), G__get_linked_tagnum(&G__ROBASTDictLN_AMirror), -1, 0, 1, 1, 1, 0, "u 'AMirror' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AMirror", 826, G__ROBASTDict_521_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAObscuration(void) {
   /* AObscuration */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AObscuration));
   G__memfunc_setup("AObscuration",1226,G__ROBASTDict_522_0_1, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AObscuration), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AObscuration",1226,G__ROBASTDict_522_0_2, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AObscuration), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name U 'TGeoShape' - 10 - shape "
"U 'TGeoMedium' - 10 '0' med", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ROBASTDict_522_0_3, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AObscuration::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ROBASTDict_522_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AObscuration::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ROBASTDict_522_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AObscuration::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ROBASTDict_522_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AObscuration::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ROBASTDict_522_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ROBASTDict_522_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AObscuration::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ROBASTDict_522_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AObscuration::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ROBASTDict_522_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AObscuration::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ROBASTDict_522_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AObscuration::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AObscuration", 1226, G__ROBASTDict_522_0_15, (int) ('i'), G__get_linked_tagnum(&G__ROBASTDictLN_AObscuration), -1, 0, 1, 1, 1, 0, "u 'AObscuration' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AObscuration", 1352, G__ROBASTDict_522_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncARay(void) {
   /* ARay */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ARay));
   G__memfunc_setup("ARay",365,G__ROBASTDict_610_0_1, 105, G__get_linked_tagnum(&G__ROBASTDictLN_ARay), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ARay",365,G__ROBASTDict_610_0_2, 105, G__get_linked_tagnum(&G__ROBASTDictLN_ARay), -1, 0, 9, 1, 1, 0, 
"i - 'Int_t' 0 - id d - 'Double_t' 0 - lambda "
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - t "
"d - 'Double_t' 0 - dx d - 'Double_t' 0 - dy "
"d - 'Double_t' 0 - dz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Absorb",601,G__ROBASTDict_610_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exit",410,G__ROBASTDict_610_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Focus",512,G__ROBASTDict_610_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirection",1217,G__ROBASTDict_610_0_6, 121, -1, -1, 0, 1, 1, 1, 8, "D - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLambda",865,G__ROBASTDict_610_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastPoint",1214,G__ROBASTDict_610_0_8, 121, -1, -1, 0, 1, 1, 1, 8, "D - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsAbsorbed",990,G__ROBASTDict_610_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsExited",799,G__ROBASTDict_610_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFocused",901,G__ROBASTDict_610_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsRunning",925,G__ROBASTDict_610_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsStopped",923,G__ROBASTDict_610_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSuspended",1127,G__ROBASTDict_610_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakePolyLine3D",1313,G__ROBASTDict_610_0_15, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TPolyLine3D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDirection",1229,G__ROBASTDict_610_0_16, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - dx d - 'Double_t' 0 - dy "
"d - 'Double_t' 0 - dz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDirection",1229,G__ROBASTDict_610_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLambda",877,G__ROBASTDict_610_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - lambda", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Stop",422,G__ROBASTDict_610_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Suspend",738,G__ROBASTDict_610_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ROBASTDict_610_0_21, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ARay::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ROBASTDict_610_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ARay::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ROBASTDict_610_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ARay::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ROBASTDict_610_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ARay::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ROBASTDict_610_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ROBASTDict_610_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ARay::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ROBASTDict_610_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ARay::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ROBASTDict_610_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ARay::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ROBASTDict_610_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ARay::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ARay", 365, G__ROBASTDict_610_0_33, (int) ('i'), G__get_linked_tagnum(&G__ROBASTDictLN_ARay), -1, 0, 1, 1, 1, 0, "u 'ARay' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ARay", 491, G__ROBASTDict_610_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncARayArray(void) {
   /* ARayArray */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ARayArray));
   G__memfunc_setup("ARayArray",876,G__ROBASTDict_612_0_1, 105, G__get_linked_tagnum(&G__ROBASTDictLN_ARayArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__ROBASTDict_612_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'ARay' - 0 - ray", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAbsorbed",1090,G__ROBASTDict_612_0_3, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetExited",899,G__ROBASTDict_612_0_4, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFocused",1001,G__ROBASTDict_612_0_5, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRunning",1025,G__ROBASTDict_612_0_6, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStopped",1023,G__ROBASTDict_612_0_7, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSuspended",1227,G__ROBASTDict_612_0_8, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ROBASTDict_612_0_9, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ARayArray::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ROBASTDict_612_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ARayArray::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ROBASTDict_612_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ARayArray::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ROBASTDict_612_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ARayArray::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ROBASTDict_612_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ROBASTDict_612_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ARayArray::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ROBASTDict_612_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ARayArray::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ROBASTDict_612_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ARayArray::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ROBASTDict_612_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ARayArray::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ARayArray", 1002, G__ROBASTDict_612_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAOpticsManager(void) {
   /* AOpticsManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROBASTDictLN_AOpticsManager));
   G__memfunc_setup("AOpticsManager",1390,G__ROBASTDict_613_0_1, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AOpticsManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AOpticsManager",1390,G__ROBASTDict_613_0_2, 105, G__get_linked_tagnum(&G__ROBASTDictLN_AOpticsManager), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("km",216,G__ROBASTDict_613_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Double_t (*)())(&AOpticsManager::km) ), 0);
   G__memfunc_setup("m",109,G__ROBASTDict_613_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Double_t (*)())(&AOpticsManager::m) ), 0);
   G__memfunc_setup("cm",208,G__ROBASTDict_613_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Double_t (*)())(&AOpticsManager::cm) ), 0);
   G__memfunc_setup("mm",218,G__ROBASTDict_613_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Double_t (*)())(&AOpticsManager::mm) ), 0);
   G__memfunc_setup("um",226,G__ROBASTDict_613_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Double_t (*)())(&AOpticsManager::um) ), 0);
   G__memfunc_setup("nm",219,G__ROBASTDict_613_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Double_t (*)())(&AOpticsManager::nm) ), 0);
   G__memfunc_setup("DisableFresnelReflection",2446,G__ROBASTDict_613_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - disable", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoFresnel",898,G__ROBASTDict_613_0_10, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - n1 d - 'Double_t' 0 - n2 "
"u 'ARay' - 1 - ray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DoReflection",1214,G__ROBASTDict_613_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - n1 u 'ARay' - 1 - ray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFocalSurface",1386,G__ROBASTDict_613_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TGeoNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLens",590,G__ROBASTDict_613_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TGeoNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMirror",823,G__ROBASTDict_613_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TGeoNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsObscuration",1349,G__ROBASTDict_613_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TGeoNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsOpticalComponent",1851,G__ROBASTDict_613_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TGeoNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFacetNormal",1388,G__ROBASTDict_613_0_17, 117, G__get_linked_tagnum(&G__ROBASTDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLimit",811,G__ROBASTDict_613_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TraceNonSequential",1845,G__ROBASTDict_613_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'ARay' - 1 - ray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TraceNonSequential",1845,G__ROBASTDict_613_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'ARayArray' - 1 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ROBASTDict_613_0_21, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AOpticsManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ROBASTDict_613_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AOpticsManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ROBASTDict_613_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AOpticsManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ROBASTDict_613_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AOpticsManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ROBASTDict_613_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ROBASTDict_613_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AOpticsManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ROBASTDict_613_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AOpticsManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ROBASTDict_613_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AOpticsManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ROBASTDict_613_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AOpticsManager::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AOpticsManager", 1390, G__ROBASTDict_613_0_33, (int) ('i'), G__get_linked_tagnum(&G__ROBASTDictLN_AOpticsManager), -1, 0, 1, 1, 1, 0, "u 'AOpticsManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AOpticsManager", 1516, G__ROBASTDict_613_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncARayShooter(void) {
   /* ARayShooter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ROBASTDictLN_ARayShooter));
   G__memfunc_setup("ARayShooter",1105,G__ROBASTDict_615_0_1, 105, G__get_linked_tagnum(&G__ROBASTDictLN_ARayShooter), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Circle",594,G__ROBASTDict_615_0_2, 85, G__get_linked_tagnum(&G__ROBASTDictLN_ARayArray), -1, 0, 7, 3, 1, 0, 
"d - 'Double_t' 0 - lambda d - 'Double_t' 0 - rmax "
"i - 'Int_t' 0 - nr i - 'Int_t' 0 - nphi "
"U 'TGeoRotation' - 0 '0' rot U 'TGeoTranslation' - 0 '0' tr "
"U 'TVector3' - 0 '0' v", (char*)NULL, (void*) G__func2void( (ARayArray* (*)(Double_t, Double_t, Int_t, Int_t, TGeoRotation*, TGeoTranslation*, TVector3*))(&ARayShooter::Circle) ), 0);
   G__memfunc_setup("RandomCircle",1203,G__ROBASTDict_615_0_3, 85, G__get_linked_tagnum(&G__ROBASTDictLN_ARayArray), -1, 0, 6, 3, 1, 0, 
"d - 'Double_t' 0 - lambda d - 'Double_t' 0 - rmax "
"i - 'Int_t' 0 - n U 'TGeoRotation' - 0 '0' rot "
"U 'TGeoTranslation' - 0 '0' tr U 'TVector3' - 0 '0' v", (char*)NULL, (void*) G__func2void( (ARayArray* (*)(Double_t, Double_t, Int_t, TGeoRotation*, TGeoTranslation*, TVector3*))(&ARayShooter::RandomCircle) ), 0);
   G__memfunc_setup("RandomCone",998,G__ROBASTDict_615_0_4, 85, G__get_linked_tagnum(&G__ROBASTDictLN_ARayArray), -1, 0, 6, 3, 1, 0, 
"d - 'Double_t' 0 - lambda d - 'Double_t' 0 - r "
"d - 'Double_t' 0 - d i - 'Int_t' 0 - n "
"U 'TGeoRotation' - 0 '0' rot U 'TGeoTranslation' - 0 '0' tr", (char*)NULL, (void*) G__func2void( (ARayArray* (*)(Double_t, Double_t, Double_t, Int_t, TGeoRotation*, TGeoTranslation*))(&ARayShooter::RandomCone) ), 0);
   G__memfunc_setup("RandomRectangle",1526,G__ROBASTDict_615_0_5, 85, G__get_linked_tagnum(&G__ROBASTDictLN_ARayArray), -1, 0, 7, 3, 1, 0, 
"d - 'Double_t' 0 - lambda d - 'Double_t' 0 - dx "
"d - 'Double_t' 0 - dy i - 'Int_t' 0 - n "
"U 'TGeoRotation' - 0 '0' rot U 'TGeoTranslation' - 0 '0' tr "
"U 'TVector3' - 0 '0' v", (char*)NULL, (void*) G__func2void( (ARayArray* (*)(Double_t, Double_t, Double_t, Int_t, TGeoRotation*, TGeoTranslation*, TVector3*))(&ARayShooter::RandomRectangle) ), 0);
   G__memfunc_setup("RandomSphere",1224,G__ROBASTDict_615_0_6, 85, G__get_linked_tagnum(&G__ROBASTDictLN_ARayArray), -1, 0, 3, 3, 1, 0, 
"d - 'Double_t' 0 - lambda i - 'Int_t' 0 - n "
"U 'TGeoTranslation' - 0 '0' tr", (char*)NULL, (void*) G__func2void( (ARayArray* (*)(Double_t, Int_t, TGeoTranslation*))(&ARayShooter::RandomSphere) ), 0);
   G__memfunc_setup("RandomSphericalCone",1921,G__ROBASTDict_615_0_7, 85, G__get_linked_tagnum(&G__ROBASTDictLN_ARayArray), -1, 0, 5, 3, 1, 0, 
"d - 'Double_t' 0 - lambda i - 'Int_t' 0 - n "
"d - 'Double_t' 0 - theta U 'TGeoRotation' - 0 '0' rot "
"U 'TGeoTranslation' - 0 '0' tr", (char*)NULL, (void*) G__func2void( (ARayArray* (*)(Double_t, Int_t, Double_t, TGeoRotation*, TGeoTranslation*))(&ARayShooter::RandomSphericalCone) ), 0);
   G__memfunc_setup("RandomSquare",1234,G__ROBASTDict_615_0_8, 85, G__get_linked_tagnum(&G__ROBASTDictLN_ARayArray), -1, 0, 6, 3, 1, 0, 
"d - 'Double_t' 0 - lambda d - 'Double_t' 0 - d "
"i - 'Int_t' 0 - n U 'TGeoRotation' - 0 '0' rot "
"U 'TGeoTranslation' - 0 '0' tr U 'TVector3' - 0 '0' v", (char*)NULL, (void*) G__func2void( (ARayArray* (*)(Double_t, Double_t, Int_t, TGeoRotation*, TGeoTranslation*, TVector3*))(&ARayShooter::RandomSquare) ), 0);
   G__memfunc_setup("Rectangle",917,G__ROBASTDict_615_0_9, 85, G__get_linked_tagnum(&G__ROBASTDictLN_ARayArray), -1, 0, 8, 3, 1, 0, 
"d - 'Double_t' 0 - lambda d - 'Double_t' 0 - dx "
"d - 'Double_t' 0 - dy i - 'Int_t' 0 - nx "
"i - 'Int_t' 0 - ny U 'TGeoRotation' - 0 '0' rot "
"U 'TGeoTranslation' - 0 '0' tr U 'TVector3' - 0 '0' v", (char*)NULL, (void*) G__func2void( (ARayArray* (*)(Double_t, Double_t, Double_t, Int_t, Int_t, TGeoRotation*, TGeoTranslation*, TVector3*))(&ARayShooter::Rectangle) ), 0);
   G__memfunc_setup("Square",625,G__ROBASTDict_615_0_10, 85, G__get_linked_tagnum(&G__ROBASTDictLN_ARayArray), -1, 0, 6, 3, 1, 0, 
"d - 'Double_t' 0 - lambda d - 'Double_t' 0 - d "
"i - 'Int_t' 0 - n U 'TGeoRotation' - 0 '0' rot "
"U 'TGeoTranslation' - 0 '0' tr U 'TVector3' - 0 '0' v", (char*)NULL, (void*) G__func2void( (ARayArray* (*)(Double_t, Double_t, Int_t, TGeoRotation*, TGeoTranslation*, TVector3*))(&ARayShooter::Square) ), 0);
   G__memfunc_setup("Class",502,G__ROBASTDict_615_0_11, 85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ARayShooter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ROBASTDict_615_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ARayShooter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ROBASTDict_615_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ARayShooter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ROBASTDict_615_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ARayShooter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ROBASTDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ROBASTDict_615_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ROBASTDict_615_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ARayShooter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ROBASTDict_615_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ARayShooter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ROBASTDict_615_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ARayShooter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ROBASTDict_615_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ARayShooter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ARayShooter", 1105, G__ROBASTDict_615_0_23, (int) ('i'), G__get_linked_tagnum(&G__ROBASTDictLN_ARayShooter), -1, 0, 1, 1, 1, 0, "u 'ARayShooter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ARayShooter", 1231, G__ROBASTDict_615_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ROBASTDict_615_0_25, (int) ('u'), G__get_linked_tagnum(&G__ROBASTDictLN_ARayShooter), -1, 1, 1, 1, 1, 0, "u 'ARayShooter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncROBASTDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalROBASTDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcROBASTDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__ROBASTDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__ROBASTDictLN_TGeoAtt = { "TGeoAtt" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TAtt3D = { "TAtt3D" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR = { "map<long,int,less<long>,allocator<pair<const long,int> > >" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR = { "map<int,TGeoElementRN*,less<int>,allocator<pair<const int,TGeoElementRN*> > >" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TGeoMedium = { "TGeoMedium" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TGeoBBox = { "TGeoBBox" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TGeoMatrix = { "TGeoMatrix" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TGeoVolume = { "TGeoVolume" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TBuffer3D = { "TBuffer3D" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TGeoShape = { "TGeoShape" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TGeoNode = { "TGeoNode" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TGeoManager = { "TGeoManager" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR = { "vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGeoVolumeAssembly::ThreadData_t*,allocator<TGeoVolumeAssembly::ThreadData_t*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_ABorderSurfaceCondition = { "ABorderSurfaceCondition" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_ARefractiveIndex = { "ARefractiveIndex" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_ACauchyFormula = { "ACauchyFormula" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_AOpticalComponent = { "AOpticalComponent" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_AFocalSurface = { "AFocalSurface" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_AGeoAsphericDisk = { "AGeoAsphericDisk" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TGeoPcon = { "TGeoPcon" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TVector2 = { "TVector2" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_AGeoBezierPcon = { "AGeoBezierPcon" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TGeoPgon = { "TGeoPgon" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_AGeoBezierPgon = { "AGeoBezierPgon" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_AGeoWinstonCone2D = { "AGeoWinstonCone2D" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_AGeoWinstonConePoly = { "AGeoWinstonConePoly" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_ASchottFormula = { "ASchottFormula" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_ASellmeierFormula = { "ASellmeierFormula" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_AGlassCatalog = { "AGlassCatalog" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_AGlassCatalogcLcLdA = { "AGlassCatalog::$" , 101 , -1 };
G__linked_taginfo G__ROBASTDictLN_ALens = { "ALens" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TGraph2D = { "TGraph2D" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_AMirror = { "AMirror" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_AObscuration = { "AObscuration" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TGeoTranslation = { "TGeoTranslation" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TGeoRotation = { "TGeoRotation" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TVirtualGeoTrack = { "TVirtualGeoTrack" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR = { "map<long,TGeoNavigatorArray*,less<long>,allocator<pair<const long,TGeoNavigatorArray*> > >" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TPolyLine3D = { "TPolyLine3D" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TGeoTrack = { "TGeoTrack" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_ARay = { "ARay" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_ARaycLcLdA = { "ARay::$" , 101 , -1 };
G__linked_taginfo G__ROBASTDictLN_ARayArray = { "ARayArray" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_AOpticsManager = { "AOpticsManager" , 99 , -1 };
G__linked_taginfo G__ROBASTDictLN_AOpticsManagercLcLdA = { "AOpticsManager::$" , 101 , -1 };
G__linked_taginfo G__ROBASTDictLN_ARayShooter = { "ARayShooter" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableROBASTDict() {
  G__ROBASTDictLN_TClass.tagnum = -1 ;
  G__ROBASTDictLN_TBuffer.tagnum = -1 ;
  G__ROBASTDictLN_TMemberInspector.tagnum = -1 ;
  G__ROBASTDictLN_TObject.tagnum = -1 ;
  G__ROBASTDictLN_TNamed.tagnum = -1 ;
  G__ROBASTDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__ROBASTDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__ROBASTDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ROBASTDictLN_TObjArray.tagnum = -1 ;
  G__ROBASTDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__ROBASTDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ROBASTDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__ROBASTDictLN_TGeoAtt.tagnum = -1 ;
  G__ROBASTDictLN_TAttLine.tagnum = -1 ;
  G__ROBASTDictLN_TAttFill.tagnum = -1 ;
  G__ROBASTDictLN_TAtt3D.tagnum = -1 ;
  G__ROBASTDictLN_TAttMarker.tagnum = -1 ;
  G__ROBASTDictLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR.tagnum = -1 ;
  G__ROBASTDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR.tagnum = -1 ;
  G__ROBASTDictLN_TGeoMedium.tagnum = -1 ;
  G__ROBASTDictLN_TGeoBBox.tagnum = -1 ;
  G__ROBASTDictLN_TGeoMatrix.tagnum = -1 ;
  G__ROBASTDictLN_TGeoVolume.tagnum = -1 ;
  G__ROBASTDictLN_TBuffer3D.tagnum = -1 ;
  G__ROBASTDictLN_TGeoShape.tagnum = -1 ;
  G__ROBASTDictLN_TGeoNode.tagnum = -1 ;
  G__ROBASTDictLN_TGeoManager.tagnum = -1 ;
  G__ROBASTDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR.tagnum = -1 ;
  G__ROBASTDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ROBASTDictLN_ABorderSurfaceCondition.tagnum = -1 ;
  G__ROBASTDictLN_ARefractiveIndex.tagnum = -1 ;
  G__ROBASTDictLN_ACauchyFormula.tagnum = -1 ;
  G__ROBASTDictLN_AOpticalComponent.tagnum = -1 ;
  G__ROBASTDictLN_AFocalSurface.tagnum = -1 ;
  G__ROBASTDictLN_AGeoAsphericDisk.tagnum = -1 ;
  G__ROBASTDictLN_TGeoPcon.tagnum = -1 ;
  G__ROBASTDictLN_TVector2.tagnum = -1 ;
  G__ROBASTDictLN_AGeoBezierPcon.tagnum = -1 ;
  G__ROBASTDictLN_TGeoPgon.tagnum = -1 ;
  G__ROBASTDictLN_AGeoBezierPgon.tagnum = -1 ;
  G__ROBASTDictLN_AGeoWinstonCone2D.tagnum = -1 ;
  G__ROBASTDictLN_AGeoWinstonConePoly.tagnum = -1 ;
  G__ROBASTDictLN_ASchottFormula.tagnum = -1 ;
  G__ROBASTDictLN_ASellmeierFormula.tagnum = -1 ;
  G__ROBASTDictLN_AGlassCatalog.tagnum = -1 ;
  G__ROBASTDictLN_AGlassCatalogcLcLdA.tagnum = -1 ;
  G__ROBASTDictLN_ALens.tagnum = -1 ;
  G__ROBASTDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__ROBASTDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__ROBASTDictLN_TGraph.tagnum = -1 ;
  G__ROBASTDictLN_TGraph2D.tagnum = -1 ;
  G__ROBASTDictLN_AMirror.tagnum = -1 ;
  G__ROBASTDictLN_AObscuration.tagnum = -1 ;
  G__ROBASTDictLN_TGeoTranslation.tagnum = -1 ;
  G__ROBASTDictLN_TGeoRotation.tagnum = -1 ;
  G__ROBASTDictLN_TVirtualGeoTrack.tagnum = -1 ;
  G__ROBASTDictLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR.tagnum = -1 ;
  G__ROBASTDictLN_TPolyLine3D.tagnum = -1 ;
  G__ROBASTDictLN_TGeoTrack.tagnum = -1 ;
  G__ROBASTDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__ROBASTDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__ROBASTDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__ROBASTDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__ROBASTDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__ROBASTDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__ROBASTDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__ROBASTDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__ROBASTDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__ROBASTDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__ROBASTDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__ROBASTDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__ROBASTDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__ROBASTDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__ROBASTDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__ROBASTDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__ROBASTDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__ROBASTDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__ROBASTDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__ROBASTDictLN_TVector3.tagnum = -1 ;
  G__ROBASTDictLN_ARay.tagnum = -1 ;
  G__ROBASTDictLN_ARaycLcLdA.tagnum = -1 ;
  G__ROBASTDictLN_ARayArray.tagnum = -1 ;
  G__ROBASTDictLN_AOpticsManager.tagnum = -1 ;
  G__ROBASTDictLN_AOpticsManagercLcLdA.tagnum = -1 ;
  G__ROBASTDictLN_ARayShooter.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableROBASTDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TGeoAtt);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TAtt3D);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TAttMarker);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_maplElongcOintcOlesslElonggRcOallocatorlEpairlEconstsPlongcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_maplEintcOTGeoElementRNmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTGeoElementRNmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TGeoMedium);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TGeoBBox);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TGeoMatrix);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TGeoVolume);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TBuffer3D);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TGeoShape);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TGeoNode);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TGeoManager);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_vectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_reverse_iteratorlEvectorlETGeoVolumeAssemblycLcLThreadData_tmUcOallocatorlETGeoVolumeAssemblycLcLThreadData_tmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROBASTDictLN_ABorderSurfaceCondition),sizeof(ABorderSurfaceCondition),-1,62464,(char*)NULL,G__setup_memvarABorderSurfaceCondition,G__setup_memfuncABorderSurfaceCondition);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROBASTDictLN_ARefractiveIndex),sizeof(ARefractiveIndex),-1,29953,(char*)NULL,G__setup_memvarARefractiveIndex,G__setup_memfuncARefractiveIndex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROBASTDictLN_ACauchyFormula),sizeof(ACauchyFormula),-1,61696,(char*)NULL,G__setup_memvarACauchyFormula,G__setup_memfuncACauchyFormula);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROBASTDictLN_AOpticalComponent),sizeof(AOpticalComponent),-1,62720,(char*)NULL,G__setup_memvarAOpticalComponent,G__setup_memfuncAOpticalComponent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROBASTDictLN_AFocalSurface),sizeof(AFocalSurface),-1,61696,(char*)NULL,G__setup_memvarAFocalSurface,G__setup_memfuncAFocalSurface);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROBASTDictLN_AGeoAsphericDisk),sizeof(AGeoAsphericDisk),-1,62720,(char*)NULL,G__setup_memvarAGeoAsphericDisk,G__setup_memfuncAGeoAsphericDisk);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TGeoPcon);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TVector2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROBASTDictLN_AGeoBezierPcon),sizeof(AGeoBezierPcon),-1,62720,(char*)NULL,G__setup_memvarAGeoBezierPcon,G__setup_memfuncAGeoBezierPcon);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TGeoPgon);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROBASTDictLN_AGeoBezierPgon),sizeof(AGeoBezierPgon),-1,62720,(char*)NULL,G__setup_memvarAGeoBezierPgon,G__setup_memfuncAGeoBezierPgon);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROBASTDictLN_AGeoWinstonCone2D),sizeof(AGeoWinstonCone2D),-1,62720,(char*)NULL,G__setup_memvarAGeoWinstonCone2D,G__setup_memfuncAGeoWinstonCone2D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROBASTDictLN_AGeoWinstonConePoly),sizeof(AGeoWinstonConePoly),-1,62720,(char*)NULL,G__setup_memvarAGeoWinstonConePoly,G__setup_memfuncAGeoWinstonConePoly);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROBASTDictLN_ASchottFormula),sizeof(ASchottFormula),-1,61696,(char*)NULL,G__setup_memvarASchottFormula,G__setup_memfuncASchottFormula);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROBASTDictLN_ASellmeierFormula),sizeof(ASellmeierFormula),-1,61696,(char*)NULL,G__setup_memvarASellmeierFormula,G__setup_memfuncASellmeierFormula);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROBASTDictLN_AGlassCatalog),sizeof(AGlassCatalog),-1,29952,(char*)NULL,G__setup_memvarAGlassCatalog,G__setup_memfuncAGlassCatalog);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_AGlassCatalogcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROBASTDictLN_ALens),sizeof(ALens),-1,62720,(char*)NULL,G__setup_memvarALens,G__setup_memfuncALens);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TGraph);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TGraph2D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROBASTDictLN_AMirror),sizeof(AMirror),-1,62720,(char*)NULL,G__setup_memvarAMirror,G__setup_memfuncAMirror);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROBASTDictLN_AObscuration),sizeof(AObscuration),-1,62720,(char*)NULL,G__setup_memvarAObscuration,G__setup_memfuncAObscuration);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TGeoTranslation);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TGeoRotation);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TVirtualGeoTrack);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_maplElongcOTGeoNavigatorArraymUcOlesslElonggRcOallocatorlEpairlEconstsPlongcOTGeoNavigatorArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TPolyLine3D);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TGeoTrack);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROBASTDictLN_ARay),sizeof(ARay),-1,62720,(char*)NULL,G__setup_memvarARay,G__setup_memfuncARay);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_ARaycLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROBASTDictLN_ARayArray),sizeof(ARayArray),-1,29952,(char*)NULL,G__setup_memvarARayArray,G__setup_memfuncARayArray);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROBASTDictLN_AOpticsManager),sizeof(AOpticsManager),-1,62720,(char*)NULL,G__setup_memvarAOpticsManager,G__setup_memfuncAOpticsManager);
   G__get_linked_tagnum_fwd(&G__ROBASTDictLN_AOpticsManagercLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ROBASTDictLN_ARayShooter),sizeof(ARayShooter),-1,29952,(char*)NULL,G__setup_memvarARayShooter,G__setup_memfuncARayShooter);
}
extern "C" void G__cpp_setupROBASTDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupROBASTDict()");
  G__set_cpp_environmentROBASTDict();
  G__cpp_setup_tagtableROBASTDict();

  G__cpp_setup_inheritanceROBASTDict();

  G__cpp_setup_typetableROBASTDict();

  G__cpp_setup_memvarROBASTDict();

  G__cpp_setup_memfuncROBASTDict();
  G__cpp_setup_globalROBASTDict();
  G__cpp_setup_funcROBASTDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncROBASTDict();
  return;
}
class G__cpp_setup_initROBASTDict {
  public:
    G__cpp_setup_initROBASTDict() { G__add_setup_func("ROBASTDict",(G__incsetup)(&G__cpp_setupROBASTDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initROBASTDict() { G__remove_setup_func("ROBASTDict"); }
};
G__cpp_setup_initROBASTDict G__cpp_setup_initializerROBASTDict;

