//
// File generated by rootcint at Fri Jul 28 16:45:05 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIGRootDCNavigatorDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GRootDCNavigatorDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void GRootDCNavigator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_GRootDCNavigator(void *p);
   static void deleteArray_GRootDCNavigator(void *p);
   static void destruct_GRootDCNavigator(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::GRootDCNavigator*)
   {
      ::GRootDCNavigator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GRootDCNavigator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GRootDCNavigator", ::GRootDCNavigator::Class_Version(), "./include/GRootDCNavigator.h", 22,
                  typeid(::GRootDCNavigator), ::ROOT::DefineBehavior(ptr, ptr),
                  &::GRootDCNavigator::Dictionary, isa_proxy, 4,
                  sizeof(::GRootDCNavigator) );
      instance.SetDelete(&delete_GRootDCNavigator);
      instance.SetDeleteArray(&deleteArray_GRootDCNavigator);
      instance.SetDestructor(&destruct_GRootDCNavigator);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::GRootDCNavigator*)
   {
      return GenerateInitInstanceLocal((::GRootDCNavigator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GRootDCNavigator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr GRootDCNavigator::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *GRootDCNavigator::Class_Name()
{
   return "GRootDCNavigator";
}

//______________________________________________________________________________
const char *GRootDCNavigator::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GRootDCNavigator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GRootDCNavigator::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GRootDCNavigator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GRootDCNavigator::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GRootDCNavigator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GRootDCNavigator::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GRootDCNavigator*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void GRootDCNavigator::Streamer(TBuffer &R__b)
{
   // Stream an object of class GRootDCNavigator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GRootDCNavigator::Class(),this);
   } else {
      R__b.WriteClassBuffer(GRootDCNavigator::Class(),this);
   }
}

//______________________________________________________________________________
void GRootDCNavigator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GRootDCNavigator.
      TClass *R__cl = ::GRootDCNavigator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DCTel", &DCTel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gDC", &gDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFL", &fFL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnodeNum", &fnodeNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDebugT", &fDebugT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDebugTr", &fDebugTr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeom", &fGeom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMatVacuum", &fMatVacuum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMatAl", &fMatAl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVacuum", &fVacuum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fAl", &fAl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fepsil", &fepsil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTopDim[3]", fTopDim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTopPosV", &fTopPosV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTopVol", &fTopVol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFocusBoxDim[3]", fFocusBoxDim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFocusBoxDim2[3]", fFocusBoxDim2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFocusBoxRot[3]", fFocusBoxRot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFocBoxZTop", &fFocBoxZTop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fQuadArmPosV[4]", &fQuadArmPosV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fQuadArmR2R1V[4]", &fQuadArmR2R1V);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMakeFacetsFlag", &fMakeFacetsFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosC[3]", fPosC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirC[3]", fDirC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosN[3]", fPosN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirN[3]", fDirN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMoveToTop", &fMoveToTop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNodeC", &fNodeC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNodeN", &fNodeN);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_GRootDCNavigator(void *p) {
      delete ((::GRootDCNavigator*)p);
   }
   static void deleteArray_GRootDCNavigator(void *p) {
      delete [] ((::GRootDCNavigator*)p);
   }
   static void destruct_GRootDCNavigator(void *p) {
      typedef ::GRootDCNavigator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::GRootDCNavigator

/********************************************************
* src/GRootDCNavigatorDict.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGRootDCNavigatorDict();

extern "C" void G__set_cpp_environmentGRootDCNavigatorDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("include/GRootDCNavigator.h");
  G__cpp_reset_tagtableGRootDCNavigatorDict();
}
#include <new>
extern "C" int G__cpp_dllrevGRootDCNavigatorDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* GRootDCNavigator */
static int G__GRootDCNavigatorDict_178_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GRootDCNavigator* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GRootDCNavigator(
(GDCTelescope*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) GRootDCNavigator(
(GDCTelescope*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GRootDCNavigator((GDCTelescope*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) GRootDCNavigator((GDCTelescope*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GRootDCNavigator((GDCTelescope*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) GRootDCNavigator((GDCTelescope*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_GRootDCNavigator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRootDCNavigatorDict_178_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((GRootDCNavigator*) G__getstructoffset())->setPositionDirection((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRootDCNavigatorDict_178_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((GRootDCNavigator*) G__getstructoffset())->getNextNodeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRootDCNavigatorDict_178_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((GRootDCNavigator*) G__getstructoffset())->getNextNodeName((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRootDCNavigatorDict_178_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((GRootDCNavigator*) G__getstructoffset())->getPositionDirection((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRootDCNavigatorDict_178_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GRootDCNavigator*) G__getstructoffset())->movePositionToTopOfTopVol();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRootDCNavigatorDict_178_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((GRootDCNavigator*) G__getstructoffset())->drawTelescope(*(int*) G__Intref(&libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((GRootDCNavigator*) G__getstructoffset())->drawTelescope();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRootDCNavigatorDict_178_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GRootDCNavigator*) G__getstructoffset())->setTrackingDebug((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRootDCNavigatorDict_178_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GRootDCNavigator*) G__getstructoffset())->getFocalBoxZBottomTopVolCoor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRootDCNavigatorDict_178_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GRootDCNavigator*) G__getstructoffset())->printVariables();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRootDCNavigatorDict_178_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GRootDCNavigator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRootDCNavigatorDict_178_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GRootDCNavigator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRootDCNavigatorDict_178_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GRootDCNavigator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRootDCNavigatorDict_178_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GRootDCNavigator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRootDCNavigatorDict_178_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const GRootDCNavigator*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRootDCNavigatorDict_178_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GRootDCNavigator*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRootDCNavigatorDict_178_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GRootDCNavigator*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRootDCNavigatorDict_178_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GRootDCNavigator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRootDCNavigatorDict_178_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GRootDCNavigator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRootDCNavigatorDict_178_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GRootDCNavigator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRootDCNavigatorDict_178_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GRootDCNavigator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GRootDCNavigatorDict_178_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GRootDCNavigator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GRootDCNavigatorDict_178_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GRootDCNavigator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GRootDCNavigator(*(GRootDCNavigator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_GRootDCNavigator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GRootDCNavigator G__TGRootDCNavigator;
static int G__GRootDCNavigatorDict_178_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GRootDCNavigator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GRootDCNavigator*) (soff+(sizeof(GRootDCNavigator)*i)))->~G__TGRootDCNavigator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GRootDCNavigator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GRootDCNavigator*) (soff))->~G__TGRootDCNavigator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* GRootDCNavigator */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGRootDCNavigatorDict {
 public:
  G__Sizep2memfuncGRootDCNavigatorDict(): p(&G__Sizep2memfuncGRootDCNavigatorDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGRootDCNavigatorDict::*p)();
};

size_t G__get_sizep2memfuncGRootDCNavigatorDict()
{
  G__Sizep2memfuncGRootDCNavigatorDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGRootDCNavigatorDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGRootDCNavigatorDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* GRootDCNavigator */
static void G__setup_memvarGRootDCNavigator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_GRootDCNavigator));
   { GRootDCNavigator *p; p=(GRootDCNavigator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_GDCTelescope),-1,-1,4,"DCTel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_GDCGeometry),-1,-1,4,"gDC=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFL=",0,"focal length");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fnodeNum=",0,"running node number, inc. on add");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fDebugT=",0,"prints Top details if true");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fDebugTr=",0,"tracking details");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_TGeoManager),-1,-1,4,"fGeom=",0,"geomanager for telescope");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_TGeoMaterial),-1,-1,4,"fMatVacuum=",0,"vacuum material");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_TGeoMaterial),-1,-1,4,"fMatAl=",0,"aluminum material");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_TGeoMedium),-1,-1,4,"fVacuum=",0,"vacuum medium");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_TGeoMedium),-1,-1,4,"fAl=",0,"aluminum medium");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fepsil=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fTopDim[3]=",0,"TOP dimensions, side to side ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_TVector3),-1,-1,4,"fTopPosV=",0,"location of center of TOP, tel.coor.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_TGeoVolume),-1,-1,4,"fTopVol=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFocusBoxDim[3]=",0,"focus box dimensions, side to side");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFocusBoxDim2[3]=",0,"focus box dimensions, side to side");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFocusBoxRot[3]=",0,"focus box rotation (degrees)");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fFocBoxZTop=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_TVector3),-1,-1,4,"fQuadArmPosV[4]=",0,"position of quadarms, TOP coordinates");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_TVector3),-1,-1,4,"fQuadArmR2R1V[4]=",0,"r2-r1 vector for each quad arm");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fMakeFacetsFlag=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fPosC[3]=",0,"current position");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fDirC[3]=",0,"current direction");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fPosN[3]=",0,"next position");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fDirN[3]=",0,"next location");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fMoveToTop=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,4,"fNodeC=",0,"current node");
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,4,"fNodeN=",0,"next node");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGRootDCNavigatorDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGRootDCNavigator(void) {
   /* GRootDCNavigator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_GRootDCNavigator));
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", "initialization", (void*) NULL, 0);
   G__memfunc_setup("setupGeometry",1405,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeMaterialMedia",1709,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", "make all media", (void*) NULL, 0);
   G__memfunc_setup("makeTop",721,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", "make top volume", (void*) NULL, 0);
   G__memfunc_setup("makeFocusBox",1223,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", "make and place focus box", (void*) NULL, 0);
   G__memfunc_setup("makeEdgeBoxes",1300,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", "make and place edge boxes", (void*) NULL, 0);
   G__memfunc_setup("makeShutter",1165,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", "make and place shutter", (void*) NULL, 0);
   G__memfunc_setup("makeQuadArms",1212,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", "make quad arms", (void*) NULL, 0);
   G__memfunc_setup("makeFacets",1012,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeCrossArms",1339,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", "make and place cross arms", (void*) NULL, 0);
   G__memfunc_setup("makeSupportWires",1701,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GRootDCNavigator",1565,G__GRootDCNavigatorDict_178_0_12, 105, G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_GRootDCNavigator), -1, 0, 3, 1, 1, 0, 
"U 'GDCTelescope' - 0 - dcTel i - - 0 '0' makeFacetsFlag "
"g - - 0 'false' debugT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPositionDirection",2114,G__GRootDCNavigatorDict_178_0_13, 67, -1, -1, 0, 2, 1, 1, 1, 
"D - - 0 - pos D - - 0 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNextNodeName",1510,G__GRootDCNavigatorDict_178_0_14, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNextNodeName",1510,G__GRootDCNavigatorDict_178_0_15, 67, -1, -1, 0, 2, 1, 1, 1, 
"D - - 10 - pos D - - 10 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPositionDirection",2102,G__GRootDCNavigatorDict_178_0_16, 67, -1, -1, 0, 2, 1, 1, 1, 
"D - - 0 - pos1 D - - 0 - dir1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("movePositionToTopOfTopVol",2587,G__GRootDCNavigatorDict_178_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("drawTelescope",1362,G__GRootDCNavigatorDict_178_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 11 '0' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrackingDebug",1638,G__GRootDCNavigatorDict_178_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - setDebug", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFocalBoxZBottomTopVolCoor",2836,G__GRootDCNavigatorDict_178_0_20, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printVariables",1478,G__GRootDCNavigatorDict_178_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__GRootDCNavigatorDict_178_0_22, 85, G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GRootDCNavigator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GRootDCNavigatorDict_178_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GRootDCNavigator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GRootDCNavigatorDict_178_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GRootDCNavigator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GRootDCNavigatorDict_178_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GRootDCNavigator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__GRootDCNavigatorDict_178_0_26, 85, G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__GRootDCNavigatorDict_178_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__GRootDCNavigatorDict_178_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GRootDCNavigatorDict_178_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GRootDCNavigatorDict_178_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GRootDCNavigator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GRootDCNavigatorDict_178_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GRootDCNavigator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GRootDCNavigatorDict_178_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GRootDCNavigator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GRootDCNavigatorDict_178_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GRootDCNavigator::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GRootDCNavigator", 1565, G__GRootDCNavigatorDict_178_0_34, (int) ('i'), G__get_linked_tagnum(&G__GRootDCNavigatorDictLN_GRootDCNavigator), -1, 0, 1, 1, 1, 0, "u 'GRootDCNavigator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GRootDCNavigator", 1691, G__GRootDCNavigatorDict_178_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGRootDCNavigatorDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGRootDCNavigatorDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGRootDCNavigatorDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GRootDCNavigatorDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GRootDCNavigatorDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GRootDCNavigatorDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GRootDCNavigatorDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__GRootDCNavigatorDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GRootDCNavigatorDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__GRootDCNavigatorDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GRootDCNavigatorDictLN_TGeoManager = { "TGeoManager" , 99 , -1 };
G__linked_taginfo G__GRootDCNavigatorDictLN_TGeoMaterial = { "TGeoMaterial" , 99 , -1 };
G__linked_taginfo G__GRootDCNavigatorDictLN_TGeoMedium = { "TGeoMedium" , 99 , -1 };
G__linked_taginfo G__GRootDCNavigatorDictLN_TGeoVolume = { "TGeoVolume" , 99 , -1 };
G__linked_taginfo G__GRootDCNavigatorDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__GRootDCNavigatorDictLN_GDCTelescope = { "GDCTelescope" , 99 , -1 };
G__linked_taginfo G__GRootDCNavigatorDictLN_GDCGeometry = { "GDCGeometry" , 99 , -1 };
G__linked_taginfo G__GRootDCNavigatorDictLN_GRootDCNavigator = { "GRootDCNavigator" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGRootDCNavigatorDict() {
  G__GRootDCNavigatorDictLN_TClass.tagnum = -1 ;
  G__GRootDCNavigatorDictLN_TBuffer.tagnum = -1 ;
  G__GRootDCNavigatorDictLN_TMemberInspector.tagnum = -1 ;
  G__GRootDCNavigatorDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__GRootDCNavigatorDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GRootDCNavigatorDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__GRootDCNavigatorDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GRootDCNavigatorDictLN_TGeoManager.tagnum = -1 ;
  G__GRootDCNavigatorDictLN_TGeoMaterial.tagnum = -1 ;
  G__GRootDCNavigatorDictLN_TGeoMedium.tagnum = -1 ;
  G__GRootDCNavigatorDictLN_TGeoVolume.tagnum = -1 ;
  G__GRootDCNavigatorDictLN_TVector3.tagnum = -1 ;
  G__GRootDCNavigatorDictLN_GDCTelescope.tagnum = -1 ;
  G__GRootDCNavigatorDictLN_GDCGeometry.tagnum = -1 ;
  G__GRootDCNavigatorDictLN_GRootDCNavigator.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGRootDCNavigatorDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GRootDCNavigatorDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__GRootDCNavigatorDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GRootDCNavigatorDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GRootDCNavigatorDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__GRootDCNavigatorDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GRootDCNavigatorDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__GRootDCNavigatorDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GRootDCNavigatorDictLN_TGeoManager);
   G__get_linked_tagnum_fwd(&G__GRootDCNavigatorDictLN_TGeoMaterial);
   G__get_linked_tagnum_fwd(&G__GRootDCNavigatorDictLN_TGeoMedium);
   G__get_linked_tagnum_fwd(&G__GRootDCNavigatorDictLN_TGeoVolume);
   G__get_linked_tagnum_fwd(&G__GRootDCNavigatorDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__GRootDCNavigatorDictLN_GDCTelescope);
   G__get_linked_tagnum_fwd(&G__GRootDCNavigatorDictLN_GDCGeometry);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GRootDCNavigatorDictLN_GRootDCNavigator),sizeof(GRootDCNavigator),-1,295936,(char*)NULL,G__setup_memvarGRootDCNavigator,G__setup_memfuncGRootDCNavigator);
}
extern "C" void G__cpp_setupGRootDCNavigatorDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupGRootDCNavigatorDict()");
  G__set_cpp_environmentGRootDCNavigatorDict();
  G__cpp_setup_tagtableGRootDCNavigatorDict();

  G__cpp_setup_inheritanceGRootDCNavigatorDict();

  G__cpp_setup_typetableGRootDCNavigatorDict();

  G__cpp_setup_memvarGRootDCNavigatorDict();

  G__cpp_setup_memfuncGRootDCNavigatorDict();
  G__cpp_setup_globalGRootDCNavigatorDict();
  G__cpp_setup_funcGRootDCNavigatorDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGRootDCNavigatorDict();
  return;
}
class G__cpp_setup_initGRootDCNavigatorDict {
  public:
    G__cpp_setup_initGRootDCNavigatorDict() { G__add_setup_func("GRootDCNavigatorDict",(G__incsetup)(&G__cpp_setupGRootDCNavigatorDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGRootDCNavigatorDict() { G__remove_setup_func("GRootDCNavigatorDict"); }
};
G__cpp_setup_initGRootDCNavigatorDict G__cpp_setup_initializerGRootDCNavigatorDict;

